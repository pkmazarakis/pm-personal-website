[{"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx":"1","/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts":"2","/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx":"3","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx":"4","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx":"5","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx":"6","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx":"7","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx":"8","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx":"9","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx":"10","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx":"11","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx":"12","/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts":"13","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx":"14","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx":"15","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx":"16","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx":"17","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx":"18","/Users/platonmazarakis/coding-projects/pm-personal-website/src/utils/contexts.tsx":"19","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/MainComponent.tsx":"20","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SegmentedControl.tsx":"21"},{"size":537,"mtime":1667149278819,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1667149278820,"results":"24","hashOfConfig":"23"},{"size":7218,"mtime":1673393408859,"results":"25","hashOfConfig":"23"},{"size":827,"mtime":1667149278820,"results":"26","hashOfConfig":"23"},{"size":1279,"mtime":1667149278820,"results":"27","hashOfConfig":"23"},{"size":812,"mtime":1671763703549,"results":"28","hashOfConfig":"23"},{"size":7640,"mtime":1672433509864,"results":"29","hashOfConfig":"23"},{"size":20938,"mtime":1672433423294,"results":"30","hashOfConfig":"23"},{"size":2380,"mtime":1677572628556,"results":"31","hashOfConfig":"23"},{"size":1839,"mtime":1671320895520,"results":"32","hashOfConfig":"23"},{"size":1779,"mtime":1673393276393,"results":"33","hashOfConfig":"23"},{"size":3919,"mtime":1678612129561,"results":"34","hashOfConfig":"23"},{"size":130,"mtime":1667149278820,"results":"35","hashOfConfig":"23"},{"size":887,"mtime":1671571375883,"results":"36","hashOfConfig":"23"},{"size":2847,"mtime":1672324720406,"results":"37","hashOfConfig":"23"},{"size":2434,"mtime":1672324517100,"results":"38","hashOfConfig":"23"},{"size":2975,"mtime":1672353670809,"results":"39","hashOfConfig":"23"},{"size":6562,"mtime":1678614292249,"results":"40","hashOfConfig":"23"},{"size":142,"mtime":1672270274358,"results":"41","hashOfConfig":"23"},{"size":727,"mtime":1672271207358,"results":"42","hashOfConfig":"23"},{"size":9075,"mtime":1673393139387,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"f6t4w8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx",[],["99","100"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx",["101","102","103","104","105","106","107","108","109"],"/* eslint-disable no-const-assign */\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { KeyboardEvent, useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport SuccessiveType from './components/SuccessiveType';\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Where from './pages/Where';\nimport How from './pages/How';\nimport Etc from './pages/Etc';\nimport Presence from './pages/Presence';\nimport Sakurajima from './pages/Sakurajima';\nimport { ChevronsRight } from './components/Icons';\nimport useSound from 'use-sound';\nimport More from './pages/More';\nimport { Button, ButtonGroup, createTheme, Fab, ThemeProvider } from '@mui/material';\nimport { DarkMode, LightMode, MusicNote } from '@mui/icons-material';\nimport { HotkeyContext, ThemeContext } from './utils/contexts';\nimport { MainComponent } from './components/MainComponent';\n\ndeclare global {\n  interface Window {\n    gtag: any;\n  }\n}\n\nconst shouldPlayIntro = window.location.pathname === '/';\n\nfunction App() {\n  const [introEnded, setIntroEnded] = useState(!shouldPlayIntro);\n  const [showHotkeys, setShowHotkeys] = useState(false);\n  const [themeValue, setThemeValue] = useState('gray');\n\n  const onKeyDown = (e: KeyboardEvent<HTMLDocument> & any) => {\n    if ((e.keyCode === 9 || e.which === 9) && !introEnded) {\n      e.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    if (!shouldPlayIntro) return;\n\n    const script = document.createElement('script');\n\n    script.src = '/p-static/js/stars.js';\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    document.addEventListener('keydown', onKeyDown);\n  }, []);\n\n  const onIntroEnd = useCallback(() => {\n    localStorage.setItem('v1:intro-completed', 'true');\n    setIntroEnded(true);\n  }, []);\n  const soundUrl = '/p-static/sounds/cereal-killa.mp3';\n\n  const [play, { stop, isPlaying }] = useSound(soundUrl);\n\n  const setThemeValueToLight = () => {\n    setThemeValue('light');\n  };\n\n  const setThemeValueToGray = () => {\n    setThemeValue('gray');\n  };\n\n  const setThemeValueToDark = () => {\n    setThemeValue('dark');\n  };\n\n  // useHotkeys(\n  //   HOTKEYS.SHOW_SHORTCUTS,\n  //   () => {\n  //     setShowHotkeys(!showHotkeys);\n  //   },\n  //   [showHotkeys]\n  // );\n  return (\n    <Wrapper>\n      <Helmet defaultTitle={'Platon Mazarakis'} titleTemplate={'%s â€¢ Platon'} />\n      <ThemeContext.Provider value={themeValue}>\n        <ThemeProvider\n          theme={\n            themeValue === 'light' ? lightTheme : themeValue === 'dark' ? darkTheme : grayTheme\n          }\n        >\n          {shouldPlayIntro ? (\n            <SuccessiveTypeContainer\n              transition={{ duration: 0.85 }}\n              animate={{ y: introEnded ? -window.innerHeight : 0 }}\n            >\n              <ProgressContainer onClick={onIntroEnd}>\n                <h4>\n                  Skip intro <ChevronsRight />\n                </h4>\n              </ProgressContainer>\n              <SuccessiveType\n                onEnd={onIntroEnd}\n                words={\n                  'Welcome... my name is Platon Mazarakis. I study Symbolic Systems at Stanford University with a concentration in Product Design. My focus lies in building products that bring people together and offer unique tantalizing experiences.'\n                }\n                speed={1}\n                userSkipped={introEnded}\n              />\n            </SuccessiveTypeContainer>\n          ) : null}\n\n          <motion.canvas\n            transition={{ duration: 0.85 }}\n            animate={{ opacity: introEnded ? 0 : 0.25 }}\n            id=\"stars\"\n          />\n          <Fab\n            aria-label=\"add\"\n            size=\"small\"\n            style={{ position: 'absolute', bottom: 16, right: 16, backgroundColor: 'white' }}\n          >\n            <MusicNote\n              color=\"action\"\n              onClick={() => {\n                isPlaying ? stop() : play();\n              }}\n            />\n          </Fab>\n          <HotkeyContext.Provider value={null}>\n            <MainComponent introEnded={introEnded}>\n              <Router>\n                <Nav\n                  setThemeValueToLight={setThemeValueToLight}\n                  setThemeValueToGray={setThemeValueToGray}\n                  setThemeValueToDark={setThemeValueToDark}\n                />\n\n                <ContentWrapper>\n                  <AnimatePresence>\n                    <Switch>\n                      <Route exact path=\"/\" component={Home} />\n                      <Route exact path=\"/where\" component={Where} />\n                      <Route exact path=\"/how\" component={How} />\n                      <Route exact path=\"/etc\" component={Etc} />\n                      <Route exact path=\"/more\" component={More} />\n                    </Switch>\n                  </AnimatePresence>\n                </ContentWrapper>\n              </Router>\n            </MainComponent>\n          </HotkeyContext.Provider>\n        </ThemeProvider>\n      </ThemeContext.Provider>\n    </Wrapper>\n  );\n}\n\nconst lightTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#ffffff',\n    },\n    secondary: {\n      light: '#999999',\n      main: '#000000',\n    },\n    background: {\n      default: '#ffffff',\n    },\n    text: {\n      primary: '#000000',\n      secondary: '#888',\n    },\n    action: {\n      active: '#3AC4E8',\n    },\n  },\n});\n\nconst grayTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#232529',\n      light: '#30343C',\n      dark: '#666666',\n    },\n    secondary: {\n      light: '#3E4249',\n      main: '#ffffff',\n    },\n    background: {\n      default: '#cccccc',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#ffffff',\n    },\n    action: {\n      active: '#3AC4E8',\n    },\n    success: {\n      main: '#30D08D',\n      light: '#30D08D',\n    },\n  },\n});\n\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#000000',\n    },\n    secondary: {\n      light: '#222222',\n      main: '#ffffff',\n    },\n    background: {\n      default: '#ffffff',\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#444',\n    },\n    action: {\n      active: '#3AC4E8',\n    },\n  },\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #232529;\n\n  canvas {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    z-index: 0;\n  }\n`;\n\nconst SuccessiveTypeContainer = styled(motion.div)`\n  width: 65ch;\n  height: 350px;\n  padding: 2rem;\n  position: relative;\n  z-index: 1;\n`;\n\nconst ProgressContainer = styled.div`\n  vertical-align: middle;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  color: #ffffff;\n  svg {\n    vertical-align: middle;\n    height: 19px;\n  }\n\n  &:hover {\n    color: #3ac4e8;\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  margin-left: 15rem;\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 1rem;\n  a {\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media (max-width: 850px) {\n    margin-left: 0px;\n    padding-top: 65px;\n  }\n`;\n\nexport default App;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx",[],["110","111"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx",["112"],"import { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport PageWrapper from './PageWrapper';\n\nconst Etc = () => (\n  <PageWrapper forceReadableWidth>\n    <Helmet>\n      <title>Contact</title>\n    </Helmet>\n    <h1>/contact</h1>\n    <h2>Thanks</h2>\n    <p>Hope you enjoyed checking out my website</p>\n    <h2>Contact</h2>\n    <p>\n      <ul>\n        <li>\n          email: <a href=\"mailto:pkmazarakis@gmail.com\">pkmazarakis@gmail.com</a>\n        </li>\n        <li>\n          twitter: <a href=\"https://www.twitter.com/PMazarakis\">twitter.com/PMazarakis</a>\n        </li>\n      </ul>\n      <a href={'https://twitter.com/messages/1304549502905470978-1304549502905470978?text='}>\n        click here\n      </a>{' '}\n      to DM me on Twitter.\n    </p>\n  </PageWrapper>\n);\n\nexport default Etc;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx",["113","114","115","116","117","118","119","120"],"import { motion, PanInfo } from 'framer-motion';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { GitHubLogo, KeyIcon, MenuIcon, NavigationIcon, TwitterLogo, XIcon } from './Icons';\nimport useSound from 'use-sound';\nimport ContentLoader from 'react-content-loader';\nimport { Button, ButtonGroup, Switch, Typography, useTheme } from '@mui/material';\nimport { SegmentedControl } from './SegmentedControl';\n\nconst pathnameOffsets: { [key: string]: number } = {\n  '/': 0,\n  '/where': 39,\n  '/how': 78,\n  '/more': 117,\n  '/etc': 156,\n};\n\nconst Nav = ({ setThemeValueToLight, setThemeValueToGray, setThemeValueToDark }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const theme = useTheme();\n\n  const [playSwitchPageSound] = useSound('/p-static/sounds/switch-page.mp3');\n\n  const [dragYOffset, setDragYOffset] = useState(0);\n  const [openOnMobile, setOpenOnMobile] = useState(false);\n  const [presenceActive, setPresenceActive] = useState(false);\n\n  const dragConstraintsRef = useRef(null);\n\n  useEffect(() => {\n    if (openOnMobile) setOpenOnMobile(false);\n    playSwitchPageSound();\n  }, [pathname]);\n\n  const pageIndicatorOffset = useMemo(\n    () => (pathname ? pathnameOffsets[pathname] ?? -180 : 0),\n    [pathname]\n  );\n\n  const pageIndicatorOffsetWithDecoration = useMemo(\n    () => 71 + 33 + pageIndicatorOffset - dragYOffset,\n    [pageIndicatorOffset, dragYOffset]\n  );\n\n  const onPageIndicatorDragEnd = useCallback(\n    (_event, info: PanInfo) => {\n      const goal = pageIndicatorOffset + info.offset.y;\n\n      const closest = Object.entries(pathnameOffsets).reduce(\n        ([prevPath, prevOffset], [curPath, curOffset]) => {\n          return Math.abs(curOffset - goal) < Math.abs(prevOffset - goal)\n            ? [curPath, curOffset]\n            : [prevPath, prevOffset];\n        }\n      );\n\n      if (closest[0] === pathname) return;\n\n      setDragYOffset(dragYOffset + info.offset.y + info.velocity.y);\n      history.push(closest[0]);\n    },\n    [history, pageIndicatorOffset, dragYOffset, pathname]\n  );\n\n  const toggleMobileMenu = useCallback(() => setOpenOnMobile(!openOnMobile), [openOnMobile]);\n\n  return (\n    <>\n      <MobileHeader theme={theme}>\n        <Title>Platon Mazarakis</Title>\n        {openOnMobile ? (\n          <XIcon onClick={toggleMobileMenu} />\n        ) : (\n          <MenuIcon onClick={toggleMobileMenu} />\n        )}\n      </MobileHeader>\n      <Container openOnMobile={openOnMobile} theme={theme}>\n        {!openOnMobile ? (\n          <PageIndicator\n            whileHover={{ width: 3 }}\n            drag=\"y\"\n            onDragEnd={onPageIndicatorDragEnd}\n            dragConstraints={dragConstraintsRef}\n            animate={{ top: pageIndicatorOffsetWithDecoration }}\n          />\n        ) : null}\n        <Items>\n          {!openOnMobile ? (\n            <Row>\n              <Title>Platon Mazarakis</Title>\n              {/* <IconButton>\n              <ChevronDown />\n            </IconButton> */}\n            </Row>\n          ) : null}\n          <Row>\n            <Location\n              target=\"_blank\"\n              href={`https://www.google.com/maps/search/${encodeURIComponent('Manhattan, NY')}`}\n              rel=\"noreferrer\"\n            >\n              <NavigationIcon />\n              <h4 style={{ color: theme.palette.secondary.main }}>Manhattan, NY</h4>\n            </Location>\n          </Row>\n\n          <div ref={dragConstraintsRef}>\n            <Page active={pathname === '/' ? 1 : 0} theme={theme} to=\"/\">\n              what I do\n            </Page>\n            <Page active={pathname === '/where' ? 1 : 0} theme={theme} to=\"/where\">\n              where I've done it\n            </Page>\n            <Page active={pathname === '/how' ? 1 : 0} theme={theme} to=\"/how\">\n              how I do it\n            </Page>\n            <Page active={pathname === '/more' ? 1 : 0} theme={theme} to=\"/more\">\n              more\n            </Page>\n            <Page active={pathname === '/etc' ? 1 : 0} theme={theme} to=\"/etc\">\n              contact\n            </Page>\n          </div>\n\n          <Icons>\n            <a href=\"https://twitter.com/PMazarakis\">\n              <TwitterLogo />\n            </a>\n            <a href=\"https://github.com/pkmazarakis\">\n              <GitHubLogo />\n            </a>\n            <a href=\"https://www.socialpassport.me/profile/5DXzRmjEtvX4bvkQXq0dqJLPRC02\">\n              <KeyIcon />\n            </a>\n          </Icons>\n          <SegmentedControl\n            id={'theme'}\n            onSegment1Tap={() => {\n              setThemeValueToLight();\n            }}\n            onSegment2Tap={() => {\n              setThemeValueToGray();\n            }}\n            onSegment3Tap={() => {\n              setThemeValueToDark();\n            }}\n            backgroundColor={undefined}\n            position={0}\n            width={200}\n            padding={''}\n            isSelected={false}\n          />\n        </Items>\n      </Container>\n    </>\n  );\n};\n\nconst Container = styled.aside<{ openOnMobile: boolean }>`\n  display: inline-block;\n  box-sizing: border-box;\n  flex-direction: column;\n  padding: 2rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 15rem;\n  border-right: 1px solid #101010;\n  height: 100vh;\n\n  @media (max-width: 850px) {\n    display: ${({ openOnMobile }) => (openOnMobile ? 'block' : 'none')};\n    background-color: ${(props) => props.theme.palette.primary.main};\n    backdrop-filter: blur(7px);\n    z-index: 1;\n    top: 65px;\n    width: 100%;\n    height: calc(100% - 65px);\n  }\n`;\n\nconst MobileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  display: flex;\n  padding: 2rem;\n  box-sizing: border-box;\n  width: 100%;\n  height: 65px;\n  background-color: ${(props) => props.theme.palette.primary.main};\n  backdrop-filter: blur(5px);\n  border-bottom: 1px solid #101010;\n  flex-shrink: 0;\n  z-index: 1;\n\n  svg {\n    margin-left: auto;\n    cursor: pointer;\n    color: #ccc;\n  }\n\n  @media (min-width: 850px) {\n    display: none;\n  }\n`;\n\nconst PageIndicator = styled(motion.div)`\n  width: 1px;\n  height: 39px;\n  background-color: #fff;\n  position: absolute;\n  right: -1px;\n  cursor: pointer;\n`;\n\nconst Items = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: 600;\n  padding: 10px 0px;\n`;\n\nconst Location = styled.a`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  height: 19px;\n  font-size: 14px;\n  margin-bottom: 15px;\n  user-select: none;\n\n  color: white;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.8);\n  }\n\n  svg:first-child {\n    height: 18px;\n    width: 18px;\n    margin-right: 10px;\n    color: #ff65b2;\n  }\n`;\n\nconst Page = styled(Link)<{ active: number; theme: any }>`\n  color: ${({ active, theme }) =>\n    active ? theme.palette.text.primary : theme.palette.text.secondary};\n  padding: 10px 0px;\n  display: flex;\n\n  &:hover {\n    /* background-color: #fff; */\n    color: ${({ theme }) => theme.palette.text.primary};\n  }\n`;\n\nconst Icons = styled.div`\n  margin-top: auto;\n  color: #ccc;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 1rem 0;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n    color: #ccc;\n\n    &:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport default Nav;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx",["121","122","123","124"],"import { useMemo } from 'react';\nimport { Tooltip } from 'react-tippy';\nimport useSound from 'use-sound';\nimport PageWrapper from './PageWrapper';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { MusicNote } from '@mui/icons-material';\nimport { Helmet } from 'react-helmet';\nconst BIRTH = new Date('2000-06-16T10:15:00Z');\nconst YEAR_MILLIS = 31556952000;\n\nconst Home = () => {\n  const age = useMemo(() => Math.floor((Date.now() - BIRTH.getTime()) / YEAR_MILLIS), []);\n\n  return (\n    <PageWrapper forceReadableWidth>\n      <Helmet>\n        <title>Me</title>\n      </Helmet>\n      <h1>/home</h1>\n      <h2>About me</h2>\n      <p>\n        Platon.{' '}\n        <Tooltip arrow title={'16th June 2000'}>\n          {age}\n        </Tooltip>{' '}\n        y/o. Build Build Build\n      </p>\n      <p></p>\n      <h3>Background</h3>\n      <p>\n        9 years of coding with experience in building products and startups for over 5 years. I've\n        worked at 4 different startups and started 3 companies. Building is central to my core and I\n        strive to get better and better with each product and feature I work on. From idea in head,\n        to drawing on paper, to designs on figma, to website in react, to marketing growth, I am\n        equipped with the experience of all tools.\n      </p>\n      <h3>Studyo</h3>\n      <p>\n        the all-in-one productivity tool that streamlines your to-do list and calendar into one\n        powerful application. With our beautiful drag and drop interface, you can build your\n        schedule instantly using your built in todo-list. Collaborate effortlessly with friends and\n        family using Studyo's one of a kind calendar sharing features. Lastly, import all your\n        meetings and events using our seamless integration with Google Calendar. Tap\n        <a href={'https://www.mystudyo.com'}> link</a> to check it out!\n      </p>\n      <h3>Social Passport</h3>\n      <p>\n        Share your digital profile with your fellow students instantaneously. one tap and you are\n        connected. Using a QR code or an NFC enabled tag you can give your instagram, phone number,\n        spotify playlists, or any social links which are easily curatable. Tap this\n        <a href={'https://www.socialpassport.app'}> link</a> to check it out!\n      </p>\n    </PageWrapper>\n  );\n};\n\nexport default Home;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx",["125","126","127","128","129"],"import PageWrapper from './PageWrapper';\nimport Technology from '../components/Technology';\nimport {\n  ElixirLogo,\n  RabbitMQLogo,\n  ReactLogo,\n  RustLogo,\n  SolidityLogo,\n  TypescriptLogo,\n} from '../components/Icons';\nimport PostgresLogo from '../assets/images/PostgresLogo.png';\nimport { Helmet } from 'react-helmet';\n\nconst How = () => {\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>Languages</title>\n      </Helmet>\n      <h1>/languages</h1>\n      <h2>Languages I use</h2>\n      <p>\n        I highly leverage new bleeding-edge technologies and languages like Elixir to stay on top of\n        the game. You can find a list of my most-used technologies below.\n      </p>\n\n      {/* <Technology\n        color=\"#9c1fa5\"\n        icon={<ElixirLogo />}\n        name=\"Elixir\"\n        type=\"Realtime, Backend\"\n        useCase={'Building fault-tolerant realtime systems that scale out across multiple nodes'}\n      /> */}\n\n      <Technology\n        color=\"#232340\"\n        icon={<ReactLogo />}\n        name=\"React\"\n        type=\"Frontend framework\"\n        useCase={'Constructing stateful and durable frontends for large and interactive web apps'}\n      />\n\n      <Technology\n        color=\"rgb(39, 118, 192)\"\n        icon={<ReactLogo />}\n        name=\"Postgres\"\n        type=\"Backend, System\"\n        useCase={'A powerful, open source object-relational database system'}\n      />\n\n      <Technology\n        color=\"#007acc\"\n        icon={<TypescriptLogo />}\n        name=\"TypeScript\"\n        type=\"JS Framework\"\n        useCase={'Types for JS'}\n      />\n\n      {/* <Technology\n        color=\"#FF6600\"\n        icon={<RabbitMQLogo />}\n        name=\"RabbitMQ\"\n        type=\"Message queue\"\n        useCase={'Messaging between different services in a robust & durable way'}\n      /> */}\n    </PageWrapper>\n  );\n};\n\nexport default How;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx",["130"],"import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nconst Word = ({ word }: { word: string }) => {\n  const [filled, setFilled] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFilled(true);\n    }, 65);\n  }, []);\n\n  return <WordSC filled={filled}>{word}</WordSC>;\n};\n\ninterface ISuccessiveTypeProps {\n  words: string;\n  speed: number;\n  userSkipped?: boolean;\n  onEnd?: () => void;\n}\n\nconst SuccessiveType = ({ words, speed, userSkipped, onEnd }: ISuccessiveTypeProps) => {\n  const [play] = useSound('/p-static/sounds/type.ogg');\n\n  const [index, setIndex] = useState(0);\n\n  const splitWords: string[] = useMemo(() => words.split(' '), [words]);\n  const shownWords: string[] = useMemo(() => splitWords.slice(0, index + 1), [splitWords, index]);\n\n  useEffect(() => {\n    if (index === splitWords.length - 1) {\n      if (onEnd)\n        setTimeout(() => {\n          onEnd();\n        }, 1800);\n\n      return;\n    }\n\n    const currentWord = splitWords[index];\n\n    setTimeout(() => {\n      setIndex(index + 1);\n    }, currentWord.length * (Math.E * 12.5) + (currentWord[currentWord.length - 1] === '.' ? 500 : 0));\n  }, [index, splitWords]);\n\n  useEffect(() => {\n    if (!userSkipped) play();\n  }, [index, play, userSkipped]);\n\n  return (\n    <Container>\n      {shownWords.map((word: string, idx) => (\n        <Word key={idx} word={word} />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: left;\n  color: #232529;\n  font-size: 20pt;\n`;\n\nconst WordSC = styled.span<{ filled: boolean }>`\n  color: ${({ filled }) => (filled ? '#ccc' : '#fff')};\n  margin-right: 4pt;\n  transition: color 0.1s ease;\n  display: inline-block;\n`;\n\nexport default SuccessiveType;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts",[],["131","132"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx",["133"],"import { useTheme } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { ReactElement } from 'react';\n\nconst pageVariants = {\n  initial: {\n    opacity: 0,\n  },\n  in: {\n    opacity: 1,\n  },\n  out: {\n    opacity: 0,\n  },\n};\n\nconst pageTransition = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: 0.4,\n};\n\nconst PageWrapper = ({\n  children,\n  forceReadableWidth,\n}: {\n  children: ReactElement | ReactElement[];\n  forceReadableWidth?: boolean;\n}) => {\n  const theme = useTheme();\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      style={{\n        maxWidth: forceReadableWidth ? '65ch' : undefined,\n        minWidth: 0,\n        height: '100%',\n        paddingBottom: '2rem',\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default PageWrapper;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx",["134"],"import { Typography, useTheme } from '@mui/material';\nimport { ReactElement } from 'react';\nimport styled from 'styled-components';\n\nconst Technology = ({\n  color,\n  icon,\n  name,\n  type,\n  useCase,\n}: {\n  color: string;\n  icon: any;\n  name: string;\n  type: string;\n  useCase: string;\n}) => {\n  const theme = useTheme();\n  return (\n    <Container theme={theme}>\n      <Head color={color}>{icon}</Head>\n\n      <Column forceWidth={110}>\n        <Typography variant=\"body2\">name</Typography>\n        <p>{name}</p>\n      </Column>\n      <Column forceWidth={200}>\n        <Typography variant=\"body2\">type</Typography>\n        <p>{type}</p>\n      </Column>\n      <Column noBorder>\n        <Typography variant=\"body2\">use case</Typography>\n        <p>{useCase}</p>\n      </Column>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 100px;\n  border: 1px solid #101010;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 1rem;\n\n  @media (max-width: 850px) {\n    flex-direction: column;\n    height: auto;\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.palette.secondary.light};\n  }\n`;\n\nconst Head = styled.div<{ color: string }>`\n  height: 100%;\n  width: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  fill: #fff;\n  background-color: ${({ color }) => color};\n  flex-shrink: 0;\n\n  @media (max-width: 850px) {\n    height: 50px;\n    width: 100%;\n  }\n\n  svg {\n    height: 30px;\n    width: 30px;\n  }\n`;\n\nconst Column = styled.div<{ forceWidth?: number; noBorder?: boolean }>`\n  display: block;\n  height: 100%;\n  width: ${({ forceWidth }) => (forceWidth ? forceWidth + 'px' : 'fit-content')};\n  min-width: ${({ forceWidth }) => (forceWidth ? forceWidth + 'px' : undefined)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-right: 1px solid ${({ noBorder }) => (noBorder ? 'transparent' : '#101010')};\n  padding: 1rem;\n  box-sizing: border-box;\n  flex-shrink: ${({ noBorder }) => (noBorder ? undefined : 0)};\n\n  @media (max-width: 850px) {\n    height: 50px;\n    width: 100%;\n    border-bottom: 1px solid ${({ noBorder }) => (noBorder ? 'transparent' : '#101010')};\n    padding: 1rem;\n    flex-shrink: 0;\n    box-sizing: content-box;\n  }\n\n  h5 {\n    font-family: 'Courier New';\n    margin: 0;\n    color: #fff;\n  }\n\n  p {\n    margin: 0;\n    white-space: normal;\n  }\n`;\n\nexport default Technology;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx",["135","136","137","138","139","140"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/utils/contexts.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/MainComponent.tsx",["141"],"import { useTheme } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const MainComponent = ({ introEnded, children }: { introEnded: any; children: any }) => {\n  const theme = useTheme();\n\n  return (\n    <motion.div\n      transition={{ duration: 0.85 }}\n      initial={false}\n      animate={{ y: !introEnded ? window.innerHeight : 0 }}\n      style={{\n        height: '100vh',\n        width: '100%',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'row',\n        overflowY: 'auto',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main,\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SegmentedControl.tsx",["142","143","144","145"],"import * as React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport { SegmentIcon } from './SegmentIcon';\n// import { Colors, presentAccentColor, videoAccentColor, designAccentColor } from '../ds/Colors';\nimport { useTheme } from '@mui/material';\n\nexport interface SegmentedControlProps {\n  id: string;\n  product: 'present' | 'video' | 'design';\n  type: 'small' | 'large' | 'custom';\n  layout: 'label' | 'both' | 'icon';\n\n  width: number;\n  height: number;\n  position: number;\n  padding: string;\n  backgroundColor: any;\n\n  icons: string[];\n  segments: string[];\n  defaultSegment: number;\n  disabled: boolean;\n  isSelected: boolean;\n\n  onSegment1Tap: () => void;\n  onSegment2Tap: () => void;\n\n  onSegment3Tap: () => void;\n}\n\nconst smallComponentSize = 24;\nconst largeComponentSize = 32;\nconst iconSize = 24;\nconst borderRadius = 8;\nconst padding = 2;\nconst iconPadding = 16;\n\nconst OuterContainer = styled.div<SegmentedControlProps>`\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  z-index: 1000;\n  background-color: #222222;\n  border-radius: ${borderRadius}px;\n  margin: 0;\n  padding: ${padding}px;\n  overflow: hidden;\n  box-sizing: border-box;\n`;\n\nconst InnerContainer = styled.div<SegmentedControlProps>`\n  position: relative;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center;\n`;\n\nconst SegmentContainer = styled.div<SegmentedControlProps>`\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  padding: ${(props) => props.padding};\n  border-radius: ${borderRadius - 2}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  z-index: 1;\n  cursor: pointer;\n  transition: all 100ms linear;\n  transition-delay: 100ms;\n\n  :active {\n    box-shadow: 0 0 0 2px rgba(30, 85, 235, 0.4);\n  }\n`;\n\nconst SegmentLabel = styled.div<SegmentedControlProps>`\n  width: auto;\n  height: 100%;\n\n  ${(props) =>\n    props.type === 'small'\n      ? css`\n          font-family: 'Monaco';\n          font-size: 12px;\n          line-height: 1.33;\n        `\n      : css`\n          font-family: 'Monaco';\n          font-size: 12px;\n          line-height: 1.71;\n        `}\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  color: ${(props) =>\n    props.isSelected\n      ? props.product === 'present'\n        ? `#777777`\n        : props.product === 'video'\n        ? `#777777`\n        : `#777777`\n      : `#777777`};\n\n  pointer-events: none;\n  user-select: none;\n  transition: all 300ms cubic-bezier(0.86, 0, 0.07, 1);\n`;\n\nconst SelectedSegment = styled.div<SegmentedControlProps>`\n  position: absolute;\n  width: ${(props) => props.width}px;\n  height: ${(props) => props.height}px;\n  left: ${(props) => props.position}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffffff;\n  border-radius: ${borderRadius - 2}px;\n  box-shadow: 0 0.5px 2px 0 rgba(5, 18, 37, 0.24), 0 0 0 1px rgba(0, 0, 0, 0.08);\n  box-sizing: border-box;\n  transition: left 300ms cubic-bezier(0.86, 0, 0.07, 1);\n`;\n\nconst SegmentSeparator = styled.div<SegmentedControlProps>`\n  position: absolute;\n  width: 1px;\n  height: ${(props) => props.height}px;\n  left: ${(props) => props.position}px;\n  background-color: #777777;\n  transition: all 300ms cubic-bezier(0.86, 0, 0.07, 1);\n`;\n\nexport function SegmentedControl(props: SegmentedControlProps) {\n  const {\n    id,\n    product,\n    type,\n    layout,\n\n    width,\n    height,\n\n    icons,\n    segments,\n    defaultSegment,\n    disabled,\n\n    onSegment1Tap,\n    onSegment2Tap,\n    onSegment3Tap,\n  } = props;\n\n  const theme = useTheme();\n\n  const allSegments = [\n    { text: segments[0], defaultEvent: onSegment1Tap, event: onSegment1Tap },\n    { text: segments[1], defaultEvent: onSegment2Tap, event: onSegment2Tap },\n    { text: segments[2], defaultEvent: onSegment3Tap, event: onSegment3Tap },\n  ].slice(0, segments.length);\n\n  const [selected, setSelected] = React.useState(defaultSegment - 1);\n\n  React.useEffect(() => {\n    setSelected(defaultSegment - 1);\n  }, [defaultSegment]);\n\n  return segments.length > 0 ? (\n    <div style={{ display: 'flex', alignItems: 'center', alignSelf: 'center' }}>\n      <OuterContainer\n        theme={theme}\n        {...props}\n        height={\n          type === 'small' ? smallComponentSize : type === 'large' ? largeComponentSize : height\n        }\n        width={\n          layout === 'icon'\n            ? (iconSize + iconPadding + padding * 2) * segments.length + padding * 2\n            : width\n        }\n      >\n        <InnerContainer\n          {...props}\n          height={\n            type === 'small'\n              ? smallComponentSize - padding * 2\n              : type === 'large'\n              ? largeComponentSize - padding * 2\n              : height - padding * 2\n          }\n          width={\n            layout === 'icon'\n              ? (iconSize + iconPadding + padding * 2) * segments.length\n              : width - padding * 2\n          }\n        >\n          <SelectedSegment\n            {...props}\n            theme={theme}\n            height={\n              type === 'small'\n                ? smallComponentSize - padding * 2\n                : type === 'large'\n                ? largeComponentSize - padding * 2\n                : height - padding * 2\n            }\n            width={\n              layout === 'icon'\n                ? iconSize + iconPadding + padding * 2\n                : (width - padding * 2) / segments.length\n            }\n            position={\n              layout === 'icon'\n                ? (iconSize + iconPadding + padding * 2) * selected\n                : ((width - padding * 2) / segments.length) * selected\n            }\n          />\n          {allSegments.map((segment, i) => {\n            const isSelected = i === selected;\n            return (\n              <React.Fragment key={i}>\n                <SegmentContainer\n                  {...props}\n                  height={\n                    type === 'small'\n                      ? smallComponentSize - padding * 2\n                      : type === 'large'\n                      ? largeComponentSize - padding * 2\n                      : height - padding * 2\n                  }\n                  width={\n                    layout === 'icon'\n                      ? iconSize + iconPadding + padding * 2\n                      : width / segments.length\n                  }\n                  padding={layout === 'icon' ? '2px' : '2px 8px 2px 8px'}\n                  role=\"button\"\n                  onClick={\n                    disabled\n                      ? () => {}\n                      : () => {\n                          setSelected(i);\n                          if (segment.event) segment.event();\n                        }\n                  }\n                >\n                  {/* {layout !== 'label' ? (\n                    <SegmentIcon\n                      type={icons[i]}\n                      color={\n                        isSelected\n                          ? product === 'present'\n                            ? `${presentAccentColor}`\n                            : product === 'video'\n                            ? `${videoAccentColor}`\n                            : `${designAccentColor}`\n                          : `${Colors.placeholderLabelColor}`\n                      }\n                    />\n                  ) : (\n                    ''\n                  )} */}\n                  {layout !== 'icon' ? (\n                    <SegmentLabel {...props} theme={theme} type={type} isSelected={isSelected}>\n                      {segment.text}\n                    </SegmentLabel>\n                  ) : (\n                    ''\n                  )}\n                </SegmentContainer>\n                {segments.length > 1 && i !== segments.length - 1 && (\n                  <SegmentSeparator\n                    {...props}\n                    height={\n                      type === 'small'\n                        ? smallComponentSize - 12\n                        : type === 'large'\n                        ? largeComponentSize - 12\n                        : height - 12\n                    }\n                    position={\n                      layout === 'icon'\n                        ? (iconSize + iconPadding + padding * 2) * (i + 1)\n                        : ((width - padding * 2) / segments.length) * (i + 1)\n                    }\n                    backgroundColor={selected !== i && selected !== i + 1 ? '#777777' : 'null'}\n                  />\n                )}\n              </React.Fragment>\n            );\n          })}\n        </InnerContainer>\n      </OuterContainer>\n    </div>\n  ) : (\n    <div />\n  );\n}\n\nSegmentedControl.displayName = 'Segmented Control';\n\nSegmentedControl.defaultProps = {\n  product: 'present',\n  type: 'large',\n  layout: 'label',\n\n  width: 240,\n  height: 32,\n\n  icons: ['public'],\n  segments: ['Light', 'Gray', 'Dark'],\n  defaultSegment: 2,\n  disabled: false,\n};\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":13,"column":8,"nodeType":"152","messageId":"153","endLine":13,"endColumn":16},{"ruleId":"150","severity":1,"message":"154","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":18},{"ruleId":"150","severity":1,"message":"155","line":18,"column":10,"nodeType":"152","messageId":"153","endLine":18,"endColumn":16},{"ruleId":"150","severity":1,"message":"156","line":18,"column":18,"nodeType":"152","messageId":"153","endLine":18,"endColumn":29},{"ruleId":"150","severity":1,"message":"157","line":19,"column":10,"nodeType":"152","messageId":"153","endLine":19,"endColumn":18},{"ruleId":"150","severity":1,"message":"158","line":19,"column":20,"nodeType":"152","messageId":"153","endLine":19,"endColumn":29},{"ruleId":"150","severity":1,"message":"159","line":33,"column":10,"nodeType":"152","messageId":"153","endLine":33,"endColumn":21},{"ruleId":"150","severity":1,"message":"160","line":33,"column":23,"nodeType":"152","messageId":"153","endLine":33,"endColumn":37},{"ruleId":"161","severity":1,"message":"162","line":53,"column":6,"nodeType":"163","endLine":53,"endColumn":8,"suggestions":"164"},{"ruleId":"146","replacedBy":"165"},{"ruleId":"148","replacedBy":"166"},{"ruleId":"150","severity":1,"message":"167","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"168","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":21},{"ruleId":"150","severity":1,"message":"155","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":16},{"ruleId":"150","severity":1,"message":"156","line":9,"column":18,"nodeType":"152","messageId":"153","endLine":9,"endColumn":29},{"ruleId":"150","severity":1,"message":"169","line":9,"column":31,"nodeType":"152","messageId":"153","endLine":9,"endColumn":37},{"ruleId":"150","severity":1,"message":"170","line":9,"column":39,"nodeType":"152","messageId":"153","endLine":9,"endColumn":49},{"ruleId":"150","severity":1,"message":"171","line":29,"column":10,"nodeType":"152","messageId":"153","endLine":29,"endColumn":24},{"ruleId":"150","severity":1,"message":"172","line":29,"column":26,"nodeType":"152","messageId":"153","endLine":29,"endColumn":43},{"ruleId":"161","severity":1,"message":"173","line":36,"column":6,"nodeType":"163","endLine":36,"endColumn":16,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"175","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":16},{"ruleId":"150","severity":1,"message":"176","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"177","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":15},{"ruleId":"150","severity":1,"message":"178","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":19},{"ruleId":"150","severity":1,"message":"179","line":4,"column":3,"nodeType":"152","messageId":"153","endLine":4,"endColumn":13},{"ruleId":"150","severity":1,"message":"180","line":5,"column":3,"nodeType":"152","messageId":"153","endLine":5,"endColumn":15},{"ruleId":"150","severity":1,"message":"181","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":11},{"ruleId":"150","severity":1,"message":"182","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":15},{"ruleId":"150","severity":1,"message":"183","line":11,"column":8,"nodeType":"152","messageId":"153","endLine":11,"endColumn":20},{"ruleId":"161","severity":1,"message":"184","line":47,"column":6,"nodeType":"163","endLine":47,"endColumn":25,"suggestions":"185"},{"ruleId":"146","replacedBy":"186"},{"ruleId":"148","replacedBy":"187"},{"ruleId":"150","severity":1,"message":"188","line":30,"column":9,"nodeType":"152","messageId":"153","endLine":30,"endColumn":14},{"ruleId":"150","severity":1,"message":"189","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":22},{"ruleId":"150","severity":1,"message":"190","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"191","line":1,"column":24,"nodeType":"152","messageId":"153","endLine":1,"endColumn":29},{"ruleId":"150","severity":1,"message":"192","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":133,"column":11,"nodeType":"195","endLine":138,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":158,"column":23,"nodeType":"195","endLine":164,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":192,"column":21,"nodeType":"195","endLine":197,"endColumn":23},{"ruleId":"150","severity":1,"message":"196","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"150","severity":1,"message":"197","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":21},{"ruleId":"150","severity":1,"message":"198","line":141,"column":5,"nodeType":"152","messageId":"153","endLine":141,"endColumn":7},{"ruleId":"150","severity":1,"message":"199","line":142,"column":5,"nodeType":"152","messageId":"153","endLine":142,"endColumn":12},{"ruleId":"150","severity":1,"message":"200","line":149,"column":5,"nodeType":"152","messageId":"153","endLine":149,"endColumn":10},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'Presence' is defined but never used.","Identifier","unusedVar","'Sakurajima' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'DarkMode' is defined but never used.","'LightMode' is defined but never used.","'showHotkeys' is assigned a value but never used.","'setShowHotkeys' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["203"],["201"],["202"],"'Link' is defined but never used.","'ContentLoader' is defined but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'presenceActive' is assigned a value but never used.","'setPresenceActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'openOnMobile' and 'playSwitchPageSound'. Either include them or remove the dependency array.",["204"],"'useSound' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'MusicNote' is defined but never used.","'ElixirLogo' is defined but never used.","'RabbitMQLogo' is defined but never used.","'RustLogo' is defined but never used.","'SolidityLogo' is defined but never used.","'PostgresLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'onEnd'. Either include it or remove the dependency array. If 'onEnd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["205"],["201"],["202"],"'theme' is assigned a value but never used.","'ReactElement' is defined but never used.","'darken' is defined but never used.","'Paper' is defined but never used.","'useSpring' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styled' is defined but never used.","'SegmentIcon' is defined but never used.","'id' is assigned a value but never used.","'product' is assigned a value but never used.","'icons' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [onKeyDown]",{"range":"212","text":"213"},"Update the dependencies array to be: [openOnMobile, pathname, playSwitchPageSound]",{"range":"214","text":"215"},"Update the dependencies array to be: [index, onEnd, splitWords]",{"range":"216","text":"217"},[1785,1787],"[onKeyDown]",[1287,1297],"[openOnMobile, pathname, playSwitchPageSound]",[1214,1233],"[index, onEnd, splitWords]"]