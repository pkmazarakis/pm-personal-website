[{"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx":"1","/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts":"2","/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx":"3","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx":"4","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx":"5","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx":"6","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx":"7","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx":"8","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx":"9","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx":"10","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx":"11","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx":"12","/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts":"13","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx":"14","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx":"15","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx":"16","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx":"17","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx":"18","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx":"19"},{"size":537,"mtime":1667149278819,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1667149278820,"results":"22","hashOfConfig":"21"},{"size":4544,"mtime":1671331390629,"results":"23","hashOfConfig":"21"},{"size":827,"mtime":1667149278820,"results":"24","hashOfConfig":"21"},{"size":1279,"mtime":1667149278820,"results":"25","hashOfConfig":"21"},{"size":813,"mtime":1671331312121,"results":"26","hashOfConfig":"21"},{"size":7454,"mtime":1671330812901,"results":"27","hashOfConfig":"21"},{"size":14553,"mtime":1667149278819,"results":"28","hashOfConfig":"21"},{"size":1604,"mtime":1671331567945,"results":"29","hashOfConfig":"21"},{"size":1839,"mtime":1671320895520,"results":"30","hashOfConfig":"21"},{"size":1776,"mtime":1667149278819,"results":"31","hashOfConfig":"21"},{"size":3063,"mtime":1671319657487,"results":"32","hashOfConfig":"21"},{"size":130,"mtime":1667149278820,"results":"33","hashOfConfig":"21"},{"size":817,"mtime":1671315403363,"results":"34","hashOfConfig":"21"},{"size":5537,"mtime":1667149278819,"results":"35","hashOfConfig":"21"},{"size":2613,"mtime":1671319929364,"results":"36","hashOfConfig":"21"},{"size":2200,"mtime":1671320160660,"results":"37","hashOfConfig":"21"},{"size":2560,"mtime":1667149278819,"results":"38","hashOfConfig":"21"},{"size":5739,"mtime":1671330981963,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"f6t4w8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx",[],["81","82"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx",["83","84","85","86"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx",["87"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx",["88"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx",["89"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx",["90","91","92","93","94"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx",["95"],"import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nconst Word = ({ word }: { word: string }) => {\n  const [filled, setFilled] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFilled(true);\n    }, 65);\n  }, []);\n\n  return <WordSC filled={filled}>{word}</WordSC>;\n};\n\ninterface ISuccessiveTypeProps {\n  words: string;\n  speed: number;\n  userSkipped?: boolean;\n  onEnd?: () => void;\n}\n\nconst SuccessiveType = ({ words, speed, userSkipped, onEnd }: ISuccessiveTypeProps) => {\n  const [play] = useSound('/p-static/sounds/type.ogg');\n\n  const [index, setIndex] = useState(0);\n\n  const splitWords: string[] = useMemo(() => words.split(' '), [words]);\n  const shownWords: string[] = useMemo(() => splitWords.slice(0, index + 1), [splitWords, index]);\n\n  useEffect(() => {\n    if (index === splitWords.length - 1) {\n      if (onEnd)\n        setTimeout(() => {\n          onEnd();\n        }, 1800);\n\n      return;\n    }\n\n    const currentWord = splitWords[index];\n\n    setTimeout(() => {\n      setIndex(index + 1);\n    }, currentWord.length * (Math.E * 12.5) + (currentWord[currentWord.length - 1] === '.' ? 500 : 0));\n  }, [index, splitWords]);\n\n  useEffect(() => {\n    if (!userSkipped) play();\n  }, [index, play, userSkipped]);\n\n  return (\n    <Container>\n      {shownWords.map((word: string, idx) => (\n        <Word key={idx} word={word} />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: left;\n  color: #fff;\n  font-size: 20pt;\n`;\n\nconst WordSC = styled.span<{ filled: boolean }>`\n  color: ${({ filled }) => (filled ? '#ccc' : '#fff')};\n  margin-right: 4pt;\n  transition: color 0.1s ease;\n  display: inline-block;\n`;\n\nexport default SuccessiveType;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx",["96","97"],"import { motion } from 'framer-motion';\nimport { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { Presence } from '../types/lanyard';\nimport SpotifyLogo from '../assets/images/spotify-logo.svg';\nimport { useAtom } from 'jotai';\nimport { doingAtom } from '../state/lanyard';\n\n// Thanks to Tim (https://github.com/timcole/timcole.me/blob/%F0%9F%A6%84/components/lanyard.tsx) for the types\n\nenum Operation {\n  Event,\n  Hello,\n  Initialize,\n  Heartbeat,\n}\n\nenum EventType {\n  INIT_STATE = 'INIT_STATE',\n  PRESENCE_UPDATE = 'PRESENCE_UPDATE',\n}\n\ntype SocketEvent = {\n  op: Operation;\n  t?: EventType;\n  d: Presence | unknown;\n};\n\nconst logLanyardEvent = (eventName: string, data: any) => {\n  // eslint-disable-next-line no-console\n  console.log(\n    `%cLanyard%c <~ ${eventName} %o`,\n    'background-color: #d7bb87; border-radius: 5px; padding: 3px; color: #372910;',\n    'background: none; color: #d7bb87;',\n    data\n  );\n};\n\nconst discordId = '94490510688792576';\n\nconst Doing = (\n  { setActive, ...props }: { setActive: (active: boolean) => void } & any,\n  ref: any\n) => {\n  const [socket, setSocket] = useState<WebSocket | null>(null);\n  const [doing, setDoing] = useAtom(doingAtom);\n\n  const send = (op: Operation, d?: unknown): void => {\n    if (socket !== null) socket.send(JSON.stringify({ op, d }));\n  };\n\n  useEffect(() => {\n    if (socket === null) return () => {};\n\n    socket.onmessage = function ({ data }: MessageEvent): void {\n      const { op, t, d }: SocketEvent = JSON.parse(data);\n\n      if (op === Operation.Hello) {\n        setInterval(\n          () => send(Operation.Heartbeat),\n          (d as { heartbeat_interval: number }).heartbeat_interval\n        );\n        send(Operation.Initialize, { subscribe_to_id: discordId });\n      } else if (op === Operation.Event && t) {\n        logLanyardEvent(t, d);\n\n        if ([EventType.INIT_STATE, EventType.PRESENCE_UPDATE].includes(t)) setDoing(d as Presence);\n      }\n    };\n\n    socket.onclose = () => {\n      setSocket(null);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (!socket) setSocket(new WebSocket('wss://api.lanyard.rest/socket'));\n  }, [socket]);\n\n  const currentActivity = useMemo(\n    () => doing?.activities.filter((activity) => activity.type === 0)[0],\n    [doing]\n  );\n\n  useEffect(() => {\n    setActive(doing?.listening_to_spotify || currentActivity);\n  }, [doing, currentActivity]);\n\n  if (!doing || !doing?.discord_status) return null;\n\n  return (\n    <>\n      {doing?.listening_to_spotify ? (\n        <Container ref={ref} to={'/presence'} {...props}>\n          <h5>\n            Listening to Spotify <LiveDot />\n          </h5>\n          <>\n            <ActivityRow>\n              <ActivityImageContainer>\n                <ActivityImage src={doing.spotify.album_art_url} />\n                <ActivitySecondaryImage src={SpotifyLogo} />\n              </ActivityImageContainer>\n\n              <ActivityInfo>\n                <h5>{doing.spotify.song}</h5>\n                <p>by {doing.spotify.artist}</p>\n              </ActivityInfo>\n            </ActivityRow>\n          </>\n        </Container>\n      ) : null}\n      {currentActivity ? (\n        <Container to={'/presence'} {...props}>\n          <h5>Doing something</h5>\n          <ActivityRow>\n            {currentActivity.assets ? (\n              <ActivityImageContainer>\n                <ActivityImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.large_image}.png`}\n                />\n                <ActivitySecondaryImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.small_image}.png`}\n                />\n              </ActivityImageContainer>\n            ) : null}\n            <ActivityInfo>\n              <h5>{currentActivity.name}</h5>\n              {currentActivity.details ? <p>{currentActivity.details}</p> : null}\n              {currentActivity.state ? <p>{currentActivity.state}</p> : null}\n            </ActivityInfo>\n          </ActivityRow>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nconst Container = styled(motion(Link))`\n  width: calc(100% + 2rem);\n  margin-left: -2rem;\n  background-color: transparent;\n  color: #ccc;\n  border-top: 1px solid #101010;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #101010;\n    color: #fff;\n  }\n\n  h5 {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n`;\n\nconst LiveDot = styled.div`\n  display: inline-block;\n  margin-left: 4px;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #ff5252;\n  animation: ${fadeInOut} 2s ease-in-out infinite;\n`;\n\nconst ActivityRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ActivityImageContainer = styled.div`\n  position: relative;\n  height: 50px;\n`;\n\nconst ActivityImage = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 10px;\n`;\n\nconst ActivitySecondaryImage = styled.img`\n  position: absolute;\n  bottom: -5px;\n  right: -5px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #000;\n  border: 2px solid #000;\n`;\n\nconst ActivityInfo = styled.div`\n  margin-left: 1rem;\n\n  h5 {\n    color: #fff;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n`;\n\nexport default forwardRef(Doing);\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx",["98"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx",["99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":15,"column":8,"nodeType":"109","messageId":"110","endLine":15,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":41,"column":6,"nodeType":"115","endLine":41,"endColumn":8,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"117","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":38,"column":6,"nodeType":"115","endLine":38,"endColumn":16,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"120","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":15},{"ruleId":"107","severity":1,"message":"121","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"122","line":5,"column":3,"nodeType":"109","messageId":"110","endLine":5,"endColumn":15},{"ruleId":"107","severity":1,"message":"123","line":7,"column":3,"nodeType":"109","messageId":"110","endLine":7,"endColumn":11},{"ruleId":"107","severity":1,"message":"124","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":15},{"ruleId":"107","severity":1,"message":"125","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":20},{"ruleId":"113","severity":1,"message":"126","line":47,"column":6,"nodeType":"115","endLine":47,"endColumn":25,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":75,"column":6,"nodeType":"115","endLine":75,"endColumn":14,"suggestions":"129"},{"ruleId":"113","severity":1,"message":"130","line":88,"column":6,"nodeType":"115","endLine":88,"endColumn":30,"suggestions":"131"},{"ruleId":"107","severity":1,"message":"132","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":22},{"ruleId":"107","severity":1,"message":"133","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":16},{"ruleId":"107","severity":1,"message":"134","line":1,"column":24,"nodeType":"109","messageId":"110","endLine":1,"endColumn":29},{"ruleId":"107","severity":1,"message":"135","line":185,"column":11,"nodeType":"109","messageId":"110","endLine":185,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":218,"column":17,"nodeType":"138","endLine":218,"endColumn":65},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'Presence' is defined but never used.","Identifier","unusedVar","'Sakurajima' is defined but never used.","'useSound' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'openOnMobile' and 'playSwitchPageSound'. Either include them or remove the dependency array.",["142"],"'AddIcon' is defined but never used.","'ElixirLogo' is defined but never used.","'RabbitMQLogo' is defined but never used.","'RustLogo' is defined but never used.","'SolidityLogo' is defined but never used.","'PostgresLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'onEnd'. Either include it or remove the dependency array. If 'onEnd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["143"],"React Hook useEffect has missing dependencies: 'send' and 'setDoing'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'setActive'. Either include it or remove the dependency array. If 'setActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],"'ReactElement' is defined but never used.","'darken' is defined but never used.","'Paper' is defined but never used.","'hoverSpring' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [onKeyDown]",{"range":"156","text":"157"},"Update the dependencies array to be: [openOnMobile, pathname, playSwitchPageSound]",{"range":"158","text":"159"},"Update the dependencies array to be: [index, onEnd, splitWords]",{"range":"160","text":"161"},"Update the dependencies array to be: [send, setDoing, socket]",{"range":"162","text":"163"},"Update the dependencies array to be: [doing, currentActivity, setActive]",{"range":"164","text":"165"},[1355,1357],"[onKeyDown]",[1202,1212],"[openOnMobile, pathname, playSwitchPageSound]",[1214,1233],"[index, onEnd, splitWords]",[2116,2124],"[send, setDoing, socket]",[2456,2480],"[doing, currentActivity, setActive]"]