[{"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx":"1","/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts":"2","/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx":"3","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx":"4","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx":"5","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx":"6","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx":"7","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx":"8","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx":"9","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx":"10","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx":"11","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx":"12","/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts":"13","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx":"14","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx":"15","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx":"16","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx":"17","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx":"18","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx":"19","/Users/platonmazarakis/coding-projects/pm-personal-website/src/utils/contexts.tsx":"20","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/MainComponent.tsx":"21"},{"size":537,"mtime":1667149278819,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1667149278820,"results":"24","hashOfConfig":"23"},{"size":7079,"mtime":1672330227130,"results":"25","hashOfConfig":"23"},{"size":827,"mtime":1667149278820,"results":"26","hashOfConfig":"23"},{"size":1279,"mtime":1667149278820,"results":"27","hashOfConfig":"23"},{"size":812,"mtime":1671763703549,"results":"28","hashOfConfig":"23"},{"size":7836,"mtime":1672326054702,"results":"29","hashOfConfig":"23"},{"size":14553,"mtime":1667149278819,"results":"30","hashOfConfig":"23"},{"size":1307,"mtime":1671763815771,"results":"31","hashOfConfig":"23"},{"size":1839,"mtime":1671320895520,"results":"32","hashOfConfig":"23"},{"size":1776,"mtime":1667149278819,"results":"33","hashOfConfig":"23"},{"size":3502,"mtime":1672322529768,"results":"34","hashOfConfig":"23"},{"size":130,"mtime":1667149278820,"results":"35","hashOfConfig":"23"},{"size":887,"mtime":1671571375883,"results":"36","hashOfConfig":"23"},{"size":5537,"mtime":1667149278819,"results":"37","hashOfConfig":"23"},{"size":2847,"mtime":1672324720406,"results":"38","hashOfConfig":"23"},{"size":2434,"mtime":1672324517100,"results":"39","hashOfConfig":"23"},{"size":2691,"mtime":1672326009061,"results":"40","hashOfConfig":"23"},{"size":5837,"mtime":1672324183283,"results":"41","hashOfConfig":"23"},{"size":142,"mtime":1672270274358,"results":"42","hashOfConfig":"23"},{"size":727,"mtime":1672271207358,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"f6t4w8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"/Users/platonmazarakis/coding-projects/pm-personal-website/src/index.tsx",[],["97","98"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/reportWebVitals.ts",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/App.tsx",["99","100","101","102","103","104","105","106","107","108"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Presence.tsx",[],["109","110"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Sakurajima.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Etc.tsx",["111"],"import { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport PageWrapper from './PageWrapper';\n\nconst Etc = () => (\n  <PageWrapper forceReadableWidth>\n    <Helmet>\n      <title>Contact</title>\n    </Helmet>\n    <h1>/contact</h1>\n    <h2>Thanks</h2>\n    <p>Hope you enjoyed checking out my website</p>\n    <h2>Contact</h2>\n    <p>\n      <ul>\n        <li>\n          email: <a href=\"mailto:pkmazarakis@gmail.com\">pkmazarakis@gmail.com</a>\n        </li>\n        <li>\n          twitter: <a href=\"https://www.twitter.com/PMazarakis\">twitter.com/PMazarakis</a>\n        </li>\n      </ul>\n      <a href={'https://twitter.com/messages/1304549502905470978-1304549502905470978?text='}>\n        click here\n      </a>{' '}\n      to DM me on Twitter.\n    </p>\n  </PageWrapper>\n);\n\nexport default Etc;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Nav.tsx",["112"],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Icons.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Home.tsx",["113","114","115","116"],"import { useMemo } from 'react';\nimport { Tooltip } from 'react-tippy';\nimport useSound from 'use-sound';\nimport PageWrapper from './PageWrapper';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { MusicNote } from '@mui/icons-material';\nimport { Helmet } from 'react-helmet';\nconst BIRTH = new Date('2000-06-16T10:15:00Z');\nconst YEAR_MILLIS = 31556952000;\n\nconst Home = () => {\n  const age = useMemo(() => Math.floor((Date.now() - BIRTH.getTime()) / YEAR_MILLIS), []);\n\n  return (\n    <PageWrapper forceReadableWidth>\n      <Helmet>\n        <title>Me</title>\n      </Helmet>\n      <h1>/home</h1>\n      <h2>About me</h2>\n      <p>\n        Platon.{' '}\n        <Tooltip arrow title={'16th June 2000'}>\n          {age}\n        </Tooltip>{' '}\n        y/o. Build Build Build\n      </p>\n      <p></p>\n      <h3>About Social Passport</h3>\n      <p>\n        Share your digital profile with your fellow students instantaneously. one tap and you are\n        connected. Using a QR code or an NFC enabled tag you can give your instagram, phone number,\n        spotify playlists, or any social links which are easily curatable. Tap this\n        <a href={'https://www.socialpassport.app'}> link</a> to check it out!\n      </p>\n    </PageWrapper>\n  );\n};\n\nexport default Home;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx",["117","118","119","120","121"],"import PageWrapper from './PageWrapper';\nimport Technology from '../components/Technology';\nimport {\n  ElixirLogo,\n  RabbitMQLogo,\n  ReactLogo,\n  RustLogo,\n  SolidityLogo,\n  TypescriptLogo,\n} from '../components/Icons';\nimport PostgresLogo from '../assets/images/PostgresLogo.png';\nimport { Helmet } from 'react-helmet';\n\nconst How = () => {\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>Languages</title>\n      </Helmet>\n      <h1>/languages</h1>\n      <h2>Languages I use</h2>\n      <p>\n        I highly leverage new bleeding-edge technologies and languages like Elixir to stay on top of\n        the game. You can find a list of my most-used technologies below.\n      </p>\n\n      {/* <Technology\n        color=\"#9c1fa5\"\n        icon={<ElixirLogo />}\n        name=\"Elixir\"\n        type=\"Realtime, Backend\"\n        useCase={'Building fault-tolerant realtime systems that scale out across multiple nodes'}\n      /> */}\n\n      <Technology\n        color=\"#232340\"\n        icon={<ReactLogo />}\n        name=\"React\"\n        type=\"Frontend framework\"\n        useCase={'Constructing stateful and durable frontends for large and interactive web apps'}\n      />\n\n      <Technology\n        color=\"rgb(39, 118, 192)\"\n        icon={<ReactLogo />}\n        name=\"Postgres\"\n        type=\"Backend, System\"\n        useCase={'A powerful, open source object-relational database system'}\n      />\n\n      <Technology\n        color=\"#007acc\"\n        icon={<TypescriptLogo />}\n        name=\"TypeScript\"\n        type=\"JS Framework\"\n        useCase={'Types for JS'}\n      />\n\n      {/* <Technology\n        color=\"#FF6600\"\n        icon={<RabbitMQLogo />}\n        name=\"RabbitMQ\"\n        type=\"Message queue\"\n        useCase={'Messaging between different services in a robust & durable way'}\n      /> */}\n    </PageWrapper>\n  );\n};\n\nexport default How;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx",["122"],"import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nconst Word = ({ word }: { word: string }) => {\n  const [filled, setFilled] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFilled(true);\n    }, 65);\n  }, []);\n\n  return <WordSC filled={filled}>{word}</WordSC>;\n};\n\ninterface ISuccessiveTypeProps {\n  words: string;\n  speed: number;\n  userSkipped?: boolean;\n  onEnd?: () => void;\n}\n\nconst SuccessiveType = ({ words, speed, userSkipped, onEnd }: ISuccessiveTypeProps) => {\n  const [play] = useSound('/p-static/sounds/type.ogg');\n\n  const [index, setIndex] = useState(0);\n\n  const splitWords: string[] = useMemo(() => words.split(' '), [words]);\n  const shownWords: string[] = useMemo(() => splitWords.slice(0, index + 1), [splitWords, index]);\n\n  useEffect(() => {\n    if (index === splitWords.length - 1) {\n      if (onEnd)\n        setTimeout(() => {\n          onEnd();\n        }, 1800);\n\n      return;\n    }\n\n    const currentWord = splitWords[index];\n\n    setTimeout(() => {\n      setIndex(index + 1);\n    }, currentWord.length * (Math.E * 12.5) + (currentWord[currentWord.length - 1] === '.' ? 500 : 0));\n  }, [index, splitWords]);\n\n  useEffect(() => {\n    if (!userSkipped) play();\n  }, [index, play, userSkipped]);\n\n  return (\n    <Container>\n      {shownWords.map((word: string, idx) => (\n        <Word key={idx} word={word} />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: left;\n  color: #fff;\n  font-size: 20pt;\n`;\n\nconst WordSC = styled.span<{ filled: boolean }>`\n  color: ${({ filled }) => (filled ? '#ccc' : '#fff')};\n  margin-right: 4pt;\n  transition: color 0.1s ease;\n  display: inline-block;\n`;\n\nexport default SuccessiveType;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/Where.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/state/lanyard.ts",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/PageWrapper.tsx",["123"],"import { useTheme } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { ReactElement } from 'react';\n\nconst pageVariants = {\n  initial: {\n    opacity: 0,\n  },\n  in: {\n    opacity: 1,\n  },\n  out: {\n    opacity: 0,\n  },\n};\n\nconst pageTransition = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: 0.4,\n};\n\nconst PageWrapper = ({\n  children,\n  forceReadableWidth,\n}: {\n  children: ReactElement | ReactElement[];\n  forceReadableWidth?: boolean;\n}) => {\n  const theme = useTheme();\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransition}\n      style={{\n        maxWidth: forceReadableWidth ? '65ch' : undefined,\n        minWidth: 0,\n        height: '100%',\n        paddingBottom: '2rem',\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default PageWrapper;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx",["124","125"],"import { motion } from 'framer-motion';\nimport { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { Presence } from '../types/lanyard';\nimport SpotifyLogo from '../assets/images/spotify-logo.svg';\nimport { useAtom } from 'jotai';\nimport { doingAtom } from '../state/lanyard';\n\n// Thanks to Tim (https://github.com/timcole/timcole.me/blob/%F0%9F%A6%84/components/lanyard.tsx) for the types\n\nenum Operation {\n  Event,\n  Hello,\n  Initialize,\n  Heartbeat,\n}\n\nenum EventType {\n  INIT_STATE = 'INIT_STATE',\n  PRESENCE_UPDATE = 'PRESENCE_UPDATE',\n}\n\ntype SocketEvent = {\n  op: Operation;\n  t?: EventType;\n  d: Presence | unknown;\n};\n\nconst logLanyardEvent = (eventName: string, data: any) => {\n  // eslint-disable-next-line no-console\n  console.log(\n    `%cLanyard%c <~ ${eventName} %o`,\n    'background-color: #d7bb87; border-radius: 5px; padding: 3px; color: #372910;',\n    'background: none; color: #d7bb87;',\n    data\n  );\n};\n\nconst discordId = '94490510688792576';\n\nconst Doing = (\n  { setActive, ...props }: { setActive: (active: boolean) => void } & any,\n  ref: any\n) => {\n  const [socket, setSocket] = useState<WebSocket | null>(null);\n  const [doing, setDoing] = useAtom(doingAtom);\n\n  const send = (op: Operation, d?: unknown): void => {\n    if (socket !== null) socket.send(JSON.stringify({ op, d }));\n  };\n\n  useEffect(() => {\n    if (socket === null) return () => {};\n\n    socket.onmessage = function ({ data }: MessageEvent): void {\n      const { op, t, d }: SocketEvent = JSON.parse(data);\n\n      if (op === Operation.Hello) {\n        setInterval(\n          () => send(Operation.Heartbeat),\n          (d as { heartbeat_interval: number }).heartbeat_interval\n        );\n        send(Operation.Initialize, { subscribe_to_id: discordId });\n      } else if (op === Operation.Event && t) {\n        logLanyardEvent(t, d);\n\n        if ([EventType.INIT_STATE, EventType.PRESENCE_UPDATE].includes(t)) setDoing(d as Presence);\n      }\n    };\n\n    socket.onclose = () => {\n      setSocket(null);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (!socket) setSocket(new WebSocket('wss://api.lanyard.rest/socket'));\n  }, [socket]);\n\n  const currentActivity = useMemo(\n    () => doing?.activities.filter((activity) => activity.type === 0)[0],\n    [doing]\n  );\n\n  useEffect(() => {\n    setActive(doing?.listening_to_spotify || currentActivity);\n  }, [doing, currentActivity]);\n\n  if (!doing || !doing?.discord_status) return null;\n\n  return (\n    <>\n      {doing?.listening_to_spotify ? (\n        <Container ref={ref} to={'/presence'} {...props}>\n          <h5>\n            Listening to Spotify <LiveDot />\n          </h5>\n          <>\n            <ActivityRow>\n              <ActivityImageContainer>\n                <ActivityImage src={doing.spotify.album_art_url} />\n                <ActivitySecondaryImage src={SpotifyLogo} />\n              </ActivityImageContainer>\n\n              <ActivityInfo>\n                <h5>{doing.spotify.song}</h5>\n                <p>by {doing.spotify.artist}</p>\n              </ActivityInfo>\n            </ActivityRow>\n          </>\n        </Container>\n      ) : null}\n      {currentActivity ? (\n        <Container to={'/presence'} {...props}>\n          <h5>Doing something</h5>\n          <ActivityRow>\n            {currentActivity.assets ? (\n              <ActivityImageContainer>\n                <ActivityImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.large_image}.png`}\n                />\n                <ActivitySecondaryImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.small_image}.png`}\n                />\n              </ActivityImageContainer>\n            ) : null}\n            <ActivityInfo>\n              <h5>{currentActivity.name}</h5>\n              {currentActivity.details ? <p>{currentActivity.details}</p> : null}\n              {currentActivity.state ? <p>{currentActivity.state}</p> : null}\n            </ActivityInfo>\n          </ActivityRow>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nconst Container = styled(motion(Link))`\n  width: calc(100% + 2rem);\n  margin-left: -2rem;\n  background-color: transparent;\n  color: #ccc;\n  border-top: 1px solid #101010;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #101010;\n    color: #fff;\n  }\n\n  h5 {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n`;\n\nconst LiveDot = styled.div`\n  display: inline-block;\n  margin-left: 4px;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #ff5252;\n  animation: ${fadeInOut} 2s ease-in-out infinite;\n`;\n\nconst ActivityRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ActivityImageContainer = styled.div`\n  position: relative;\n  height: 50px;\n`;\n\nconst ActivityImage = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 10px;\n`;\n\nconst ActivitySecondaryImage = styled.img`\n  position: absolute;\n  bottom: -5px;\n  right: -5px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #000;\n  border: 2px solid #000;\n`;\n\nconst ActivityInfo = styled.div`\n  margin-left: 1rem;\n\n  h5 {\n    color: #fff;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n`;\n\nexport default forwardRef(Doing);\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Repo.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Technology.tsx",["126"],"import { Typography, useTheme } from '@mui/material';\nimport { ReactElement } from 'react';\nimport styled from 'styled-components';\n\nconst Technology = ({\n  color,\n  icon,\n  name,\n  type,\n  useCase,\n}: {\n  color: string;\n  icon: any;\n  name: string;\n  type: string;\n  useCase: string;\n}) => {\n  const theme = useTheme();\n  return (\n    <Container theme={theme}>\n      <Head color={color}>{icon}</Head>\n\n      <Column forceWidth={110}>\n        <Typography variant=\"body2\">name</Typography>\n        <p>{name}</p>\n      </Column>\n      <Column forceWidth={200}>\n        <Typography variant=\"body2\">type</Typography>\n        <p>{type}</p>\n      </Column>\n      <Column noBorder>\n        <Typography variant=\"body2\">use case</Typography>\n        <p>{useCase}</p>\n      </Column>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 100px;\n  border: 1px solid #101010;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 1rem;\n\n  @media (max-width: 850px) {\n    flex-direction: column;\n    height: auto;\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.palette.secondary.light};\n  }\n`;\n\nconst Head = styled.div<{ color: string }>`\n  height: 100%;\n  width: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  fill: #fff;\n  background-color: ${({ color }) => color};\n  flex-shrink: 0;\n\n  @media (max-width: 850px) {\n    height: 50px;\n    width: 100%;\n  }\n\n  svg {\n    height: 30px;\n    width: 30px;\n  }\n`;\n\nconst Column = styled.div<{ forceWidth?: number; noBorder?: boolean }>`\n  display: block;\n  height: 100%;\n  width: ${({ forceWidth }) => (forceWidth ? forceWidth + 'px' : 'fit-content')};\n  min-width: ${({ forceWidth }) => (forceWidth ? forceWidth + 'px' : undefined)};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-right: 1px solid ${({ noBorder }) => (noBorder ? 'transparent' : '#101010')};\n  padding: 1rem;\n  box-sizing: border-box;\n  flex-shrink: ${({ noBorder }) => (noBorder ? undefined : 0)};\n\n  @media (max-width: 850px) {\n    height: 50px;\n    width: 100%;\n    border-bottom: 1px solid ${({ noBorder }) => (noBorder ? 'transparent' : '#101010')};\n    padding: 1rem;\n    flex-shrink: 0;\n    box-sizing: content-box;\n  }\n\n  h5 {\n    font-family: 'Courier New';\n    margin: 0;\n    color: #fff;\n  }\n\n  p {\n    margin: 0;\n    white-space: normal;\n  }\n`;\n\nexport default Technology;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Co.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/More.tsx",["127","128","129","130","131","132"],"import { darken, Grid, Paper, Typography, useTheme } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport ReactPlayer from 'react-player';\nimport { useSpring } from 'react-spring';\nimport SocialPassportAppIcon from '../assets/images/platon.png';\nimport Resume from '../assets/images/PlatonResume.png';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n  },\n  paper: {\n    position: 'relative',\n    height: '100%',\n    textAlign: 'left',\n    borderRadius: '8px',\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.secondary,\n      cursor: 'pointer',\n    },\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    borderRadius: '8px',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.secondary,\n      cursor: 'pointer',\n    },\n  },\n  imageHover: {\n    width: '100%',\n    height: 'auto',\n    borderRadius: '8px',\n    '&:hover': {\n      opacity: '50%',\n      backgroundColor: 'gray',\n    },\n  },\n  video: {\n    position: 'relative',\n    width: 'auto',\n    height: 'auto',\n    borderRadius: '8px',\n  },\n  hoverDiv: {\n    position: 'absolute',\n    left: '55%',\n    top: '40%',\n    padding: '12px',\n    borderRadius: '4px',\n    '&:hover': {\n      backgroundColor: 'gray',\n    },\n  },\n}));\nconst More = () => {\n  const [showImage, setShowImage] = useState<any>(null);\n  const classes = useStyles();\n  const theme = useTheme();\n  const hobbies = [\n    {\n      type: 'image',\n      url: SocialPassportAppIcon,\n      title: 'sp logo',\n      description: 'lovin social passport',\n      id: 1,\n    },\n    {\n      type: 'image',\n      url: SocialPassportAppIcon,\n      title: 'sp logo',\n      description: 'lovin social passport',\n      id: 1,\n    },\n  ];\n  const resume = [\n    {\n      type: 'image',\n      url: Resume,\n      title: null,\n      description: null,\n      id: 1,\n    },\n  ];\n\n  interface ArtBoxProps {\n    initialColor: string;\n  }\n\n  const ArtBox: React.FC<ArtBoxProps> = ({ initialColor, children }) => {\n    const [hover, setHover] = useState<string>(initialColor);\n\n    const hoverSpring = useSpring({\n      from: { color: initialColor },\n      to: { color: hover || initialColor },\n    });\n\n    return (\n      <div\n        style={{\n          backgroundColor: hover,\n          transition: 'background-color 0.25s ease',\n          cursor: 'pointer',\n          borderRadius: '8px',\n          padding: '12px',\n          marginBottom: '12px',\n        }}\n        onMouseEnter={() => setHover('#444444')}\n        onMouseLeave={() => setHover(initialColor)}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Helmet>\n        <title>Miscellaneous</title>\n      </Helmet>\n      {showImage ? (\n        <div>\n          <img src={showImage} className={classes.image} onClick={() => setShowImage(null)} />\n          <div\n            className={classes.hoverDiv}\n            onClick={() => {\n              setShowImage(null);\n            }}\n          >\n            click to close\n          </div>\n        </div>\n      ) : (\n        <div>\n          <h1>/more</h1>\n          <h2>Side Projects and Hobbies</h2>\n          <Grid container spacing={2}>\n            {hobbies.map((item) => (\n              <Grid item xs={12} sm={6} md={6} key={item.id}>\n                <ArtBox initialColor={theme.palette.primary.main}>\n                  {item.type === 'image' ? (\n                    <img\n                      src={item.url}\n                      className={classes.image}\n                      onClick={() => setShowImage(item.url)}\n                    />\n                  ) : (\n                    <ReactPlayer\n                      url={item.url}\n                      width=\"100%\"\n                      height=\"87%\"\n                      style={{ borderRadius: '0.75rem', overflow: 'hidden' }}\n                    />\n                  )}\n                  <div style={{ display: 'grid', margin: 0, padding: 0 }}>\n                    <Typography variant=\"h6\" style={{ color: theme.palette.text.primary }}>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"body2\" style={{ color: theme.palette.text.primary }}>\n                      {item.description}\n                    </Typography>\n                  </div>\n                </ArtBox>\n              </Grid>\n            ))}\n          </Grid>\n          <h2>Resume</h2>\n          <Grid container spacing={2}>\n            {resume.map((item) => (\n              <Grid item xs={12} sm={6} md={6} key={item.id}>\n                <ArtBox initialColor={theme.palette.primary.main}>\n                  {item.type === 'image' ? (\n                    <img\n                      src={item.url}\n                      className={classes.image}\n                      onClick={() => setShowImage(item.url)}\n                    />\n                  ) : (\n                    <ReactPlayer\n                      url={item.url}\n                      width=\"100%\"\n                      height=\"87%\"\n                      style={{ borderRadius: '0.75rem', overflow: 'hidden' }}\n                    />\n                  )}\n                  <div style={{ display: 'grid', margin: 0, padding: 0, background: 'gray' }}>\n                    <Typography variant=\"h6\" style={{ color: 'white' }}>\n                      {item.title}\n                    </Typography>\n                    <Typography variant=\"body2\">{item.description}</Typography>\n                  </div>\n                </ArtBox>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default More;\n","/Users/platonmazarakis/coding-projects/pm-personal-website/src/utils/contexts.tsx",[],"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/MainComponent.tsx",["133"],"import { useTheme } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const MainComponent = ({ introEnded, children }: { introEnded: any; children: any }) => {\n  const theme = useTheme();\n\n  return (\n    <motion.div\n      transition={{ duration: 0.85 }}\n      initial={false}\n      animate={{ y: !introEnded ? window.innerHeight : 0 }}\n      style={{\n        height: '100vh',\n        width: '100%',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'row',\n        overflowY: 'auto',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.main,\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":13,"column":8,"nodeType":"140","messageId":"141","endLine":13,"endColumn":16},{"ruleId":"138","severity":1,"message":"142","line":14,"column":8,"nodeType":"140","messageId":"141","endLine":14,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":18,"column":18,"nodeType":"140","messageId":"141","endLine":18,"endColumn":29},{"ruleId":"138","severity":1,"message":"145","line":19,"column":10,"nodeType":"140","messageId":"141","endLine":19,"endColumn":18},{"ruleId":"138","severity":1,"message":"146","line":19,"column":20,"nodeType":"140","messageId":"141","endLine":19,"endColumn":29},{"ruleId":"138","severity":1,"message":"147","line":33,"column":10,"nodeType":"140","messageId":"141","endLine":33,"endColumn":21},{"ruleId":"138","severity":1,"message":"148","line":33,"column":23,"nodeType":"140","messageId":"141","endLine":33,"endColumn":37},{"ruleId":"138","severity":1,"message":"149","line":34,"column":22,"nodeType":"140","messageId":"141","endLine":34,"endColumn":35},{"ruleId":"150","severity":1,"message":"151","line":53,"column":6,"nodeType":"152","endLine":53,"endColumn":8,"suggestions":"153"},{"ruleId":"134","replacedBy":"154"},{"ruleId":"136","replacedBy":"155"},{"ruleId":"138","severity":1,"message":"156","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"157","line":40,"column":6,"nodeType":"152","endLine":40,"endColumn":16,"suggestions":"158"},{"ruleId":"138","severity":1,"message":"159","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"160","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":13},{"ruleId":"138","severity":1,"message":"161","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"162","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":19},{"ruleId":"138","severity":1,"message":"163","line":4,"column":3,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"164","line":5,"column":3,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"138","severity":1,"message":"165","line":7,"column":3,"nodeType":"140","messageId":"141","endLine":7,"endColumn":11},{"ruleId":"138","severity":1,"message":"166","line":8,"column":3,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"167","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":20},{"ruleId":"150","severity":1,"message":"168","line":47,"column":6,"nodeType":"152","endLine":47,"endColumn":25,"suggestions":"169"},{"ruleId":"138","severity":1,"message":"170","line":30,"column":9,"nodeType":"140","messageId":"141","endLine":30,"endColumn":14},{"ruleId":"150","severity":1,"message":"171","line":75,"column":6,"nodeType":"152","endLine":75,"endColumn":14,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"173","line":88,"column":6,"nodeType":"152","endLine":88,"endColumn":30,"suggestions":"174"},{"ruleId":"138","severity":1,"message":"175","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":22},{"ruleId":"138","severity":1,"message":"176","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"138","severity":1,"message":"177","line":1,"column":24,"nodeType":"140","messageId":"141","endLine":1,"endColumn":29},{"ruleId":"138","severity":1,"message":"178","line":99,"column":11,"nodeType":"140","messageId":"141","endLine":99,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":129,"column":11,"nodeType":"181","endLine":129,"endColumn":95},{"ruleId":"179","severity":1,"message":"180","line":148,"column":21,"nodeType":"181","endLine":152,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":179,"column":21,"nodeType":"181","endLine":183,"endColumn":23},{"ruleId":"138","severity":1,"message":"182","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'Presence' is defined but never used.","Identifier","unusedVar","'Sakurajima' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'DarkMode' is defined but never used.","'LightMode' is defined but never used.","'showHotkeys' is assigned a value but never used.","'setShowHotkeys' is assigned a value but never used.","'setThemeValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onKeyDown'. Either include it or remove the dependency array.","ArrayExpression",["185"],["183"],["184"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'openOnMobile' and 'playSwitchPageSound'. Either include them or remove the dependency array.",["186"],"'useSound' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'MusicNote' is defined but never used.","'ElixirLogo' is defined but never used.","'RabbitMQLogo' is defined but never used.","'RustLogo' is defined but never used.","'SolidityLogo' is defined but never used.","'PostgresLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'onEnd'. Either include it or remove the dependency array. If 'onEnd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["187"],"'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'send' and 'setDoing'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'setActive'. Either include it or remove the dependency array. If 'setActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],"'ReactElement' is defined but never used.","'darken' is defined but never used.","'Paper' is defined but never used.","'hoverSpring' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styled' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [onKeyDown]",{"range":"200","text":"201"},"Update the dependencies array to be: [openOnMobile, pathname, playSwitchPageSound]",{"range":"202","text":"203"},"Update the dependencies array to be: [index, onEnd, splitWords]",{"range":"204","text":"205"},"Update the dependencies array to be: [send, setDoing, socket]",{"range":"206","text":"207"},"Update the dependencies array to be: [doing, currentActivity, setActive]",{"range":"208","text":"209"},[1785,1787],"[onKeyDown]",[1280,1290],"[openOnMobile, pathname, playSwitchPageSound]",[1214,1233],"[index, onEnd, splitWords]",[2116,2124],"[send, setDoing, socket]",[2456,2480],"[doing, currentActivity, setActive]"]