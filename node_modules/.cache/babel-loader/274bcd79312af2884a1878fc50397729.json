{"ast":null,"code":"var _jsxFileName = \"/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx\";\nimport PageWrapper from './PageWrapper';\nimport Technology from '../components/Technology';\nimport { ElixirLogo, RabbitMQLogo, ReactLogo, RustLogo, TypescriptLogo } from '../components/Icons';\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst How = () => {\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"How\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How I Do It\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"I highly leverage new bleeding-edge technologies and languages like Elixir to stay on top of the game. You can find a list of my most-used technologies below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Technology, {\n      color: \"#9c1fa5\",\n      icon: /*#__PURE__*/_jsxDEV(ElixirLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this),\n      name: \"Elixir\",\n      type: \"Realtime, Backend\",\n      useCase: 'Building fault-tolerant realtime systems that scale out across multiple nodes'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Technology, {\n      color: \"#232340\",\n      icon: /*#__PURE__*/_jsxDEV(ReactLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this),\n      name: \"React\",\n      type: \"Frontend framework\",\n      useCase: 'Constructing stateful and durable frontends for large and interactive web apps'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Technology, {\n      color: \"#dea584\",\n      icon: /*#__PURE__*/_jsxDEV(RustLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this),\n      name: \"Rust\",\n      type: \"Backend, System\",\n      useCase: 'Optimizing parts of Elixir code using Rust NIFs and writing efficient system code'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Technology, {\n      color: \"#007acc\",\n      icon: /*#__PURE__*/_jsxDEV(TypescriptLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this),\n      name: \"TypeScript\",\n      type: \"JS Framework\",\n      useCase: 'Types for JS - will save your life when projects expand'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Technology, {\n      color: \"#FF6600\",\n      icon: /*#__PURE__*/_jsxDEV(RabbitMQLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this),\n      name: \"RabbitMQ\",\n      type: \"Message queue\",\n      useCase: 'Messaging between different services in a robust & durable way'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = How;\nexport default How;\n\nvar _c;\n\n$RefreshReg$(_c, \"How\");","map":{"version":3,"sources":["/Users/platonmazarakis/coding-projects/pm-personal-website/src/pages/How.tsx"],"names":["PageWrapper","Technology","ElixirLogo","RabbitMQLogo","ReactLogo","RustLogo","TypescriptLogo","Helmet","How"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,QAJF,EAMEC,cANF,QAOO,qBAPP;AAQA,SAASC,MAAT,QAAuB,cAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,IAAI,EAAC,mBAJP;AAKE,MAAA,OAAO,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,oBAJP;AAKE,MAAA,OAAO,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YAlBF,eA0BE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,iBAJP;AAKE,MAAA,OAAO,EACL;AANJ;AAAA;AAAA;AAAA;AAAA,YA1BF,eAoCE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,IAAI,EAAC,cAJP;AAKE,MAAA,OAAO,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YApCF,eA4CE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,eAJP;AAKE,MAAA,OAAO,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAvDD;;KAAMA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import PageWrapper from './PageWrapper';\nimport Technology from '../components/Technology';\nimport {\n  ElixirLogo,\n  RabbitMQLogo,\n  ReactLogo,\n  RustLogo,\n  SolidityLogo,\n  TypescriptLogo,\n} from '../components/Icons';\nimport { Helmet } from 'react-helmet';\n\nconst How = () => {\n  return (\n    <PageWrapper>\n      <Helmet>\n        <title>How</title>\n      </Helmet>\n      <h1>How I Do It</h1>\n      <p>\n        I highly leverage new bleeding-edge technologies and languages like Elixir to stay on top of\n        the game. You can find a list of my most-used technologies below.\n      </p>\n\n      <Technology\n        color=\"#9c1fa5\"\n        icon={<ElixirLogo />}\n        name=\"Elixir\"\n        type=\"Realtime, Backend\"\n        useCase={'Building fault-tolerant realtime systems that scale out across multiple nodes'}\n      />\n\n      <Technology\n        color=\"#232340\"\n        icon={<ReactLogo />}\n        name=\"React\"\n        type=\"Frontend framework\"\n        useCase={'Constructing stateful and durable frontends for large and interactive web apps'}\n      />\n\n      <Technology\n        color=\"#dea584\"\n        icon={<RustLogo />}\n        name=\"Rust\"\n        type=\"Backend, System\"\n        useCase={\n          'Optimizing parts of Elixir code using Rust NIFs and writing efficient system code'\n        }\n      />\n\n      <Technology\n        color=\"#007acc\"\n        icon={<TypescriptLogo />}\n        name=\"TypeScript\"\n        type=\"JS Framework\"\n        useCase={'Types for JS - will save your life when projects expand'}\n      />\n\n      <Technology\n        color=\"#FF6600\"\n        icon={<RabbitMQLogo />}\n        name=\"RabbitMQ\"\n        type=\"Message queue\"\n        useCase={'Messaging between different services in a robust & durable way'}\n      />\n    </PageWrapper>\n  );\n};\n\nexport default How;\n"]},"metadata":{},"sourceType":"module"}