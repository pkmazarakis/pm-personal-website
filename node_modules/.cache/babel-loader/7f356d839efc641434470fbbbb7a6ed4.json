{"ast":null,"code":"var _jsxFileName = \"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx\",\n    _s = $RefreshSig$();\n\nimport { motion } from 'framer-motion';\nimport { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport SpotifyLogo from \"../assets/images/spotify-logo.svg\";\nimport { useAtom } from 'jotai';\nimport { doingAtom } from '../state/lanyard'; // Thanks to Tim (https://github.com/timcole/timcole.me/blob/%F0%9F%A6%84/components/lanyard.tsx) for the types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Operation;\n\n(function (Operation) {\n  Operation[Operation[\"Event\"] = 0] = \"Event\";\n  Operation[Operation[\"Hello\"] = 1] = \"Hello\";\n  Operation[Operation[\"Initialize\"] = 2] = \"Initialize\";\n  Operation[Operation[\"Heartbeat\"] = 3] = \"Heartbeat\";\n})(Operation || (Operation = {}));\n\nvar EventType;\n\n(function (EventType) {\n  EventType[\"INIT_STATE\"] = \"INIT_STATE\";\n  EventType[\"PRESENCE_UPDATE\"] = \"PRESENCE_UPDATE\";\n})(EventType || (EventType = {}));\n\nconst logLanyardEvent = (eventName, data) => {\n  // eslint-disable-next-line no-console\n  console.log(`%cLanyard%c <~ ${eventName} %o`, 'background-color: #d7bb87; border-radius: 5px; padding: 3px; color: #372910;', 'background: none; color: #d7bb87;', data);\n};\n\nconst discordId = '94490510688792576';\n\nconst Doing = ({\n  setActive,\n  ...props\n}, ref) => {\n  _s();\n\n  const [socket, setSocket] = useState(null);\n  const [doing, setDoing] = useAtom(doingAtom);\n\n  const send = (op, d) => {\n    if (socket !== null) socket.send(JSON.stringify({\n      op,\n      d\n    }));\n  };\n\n  useEffect(() => {\n    if (socket === null) return () => {};\n\n    socket.onmessage = function ({\n      data\n    }) {\n      const {\n        op,\n        t,\n        d\n      } = JSON.parse(data);\n\n      if (op === Operation.Hello) {\n        setInterval(() => send(Operation.Heartbeat), d.heartbeat_interval);\n        send(Operation.Initialize, {\n          subscribe_to_id: discordId\n        });\n      } else if (op === Operation.Event && t) {\n        logLanyardEvent(t, d);\n        if ([EventType.INIT_STATE, EventType.PRESENCE_UPDATE].includes(t)) setDoing(d);\n      }\n    };\n\n    socket.onclose = () => {\n      setSocket(null);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!socket) setSocket(new WebSocket('wss://api.lanyard.rest/socket'));\n  }, [socket]);\n  const currentActivity = useMemo(() => doing === null || doing === void 0 ? void 0 : doing.activities.filter(activity => activity.type === 0)[0], [doing]);\n  useEffect(() => {\n    setActive((doing === null || doing === void 0 ? void 0 : doing.listening_to_spotify) || currentActivity);\n  }, [doing, currentActivity]);\n  if (!doing || !(doing === null || doing === void 0 ? void 0 : doing.discord_status)) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(doing === null || doing === void 0 ? void 0 : doing.listening_to_spotify) ? /*#__PURE__*/_jsxDEV(Container, {\n      ref: ref,\n      to: '/presence',\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Listening to Spotify \", /*#__PURE__*/_jsxDEV(LiveDot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ActivityRow, {\n          children: [/*#__PURE__*/_jsxDEV(ActivityImageContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ActivityImage, {\n              src: doing.spotify.album_art_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActivitySecondaryImage, {\n              src: SpotifyLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ActivityInfo, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: doing.spotify.song\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"by \", doing.spotify.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null, currentActivity ? /*#__PURE__*/_jsxDEV(Container, {\n      to: '/presence',\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Doing something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActivityRow, {\n        children: [currentActivity.assets ? /*#__PURE__*/_jsxDEV(ActivityImageContainer, {\n          children: [/*#__PURE__*/_jsxDEV(ActivityImage, {\n            src: `https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.large_image}.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ActivitySecondaryImage, {\n            src: `https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.small_image}.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(ActivityInfo, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: currentActivity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), currentActivity.details ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentActivity.details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 42\n          }, this) : null, currentActivity.state ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentActivity.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 40\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Doing, \"5g+tkqPd6uVs57TABDibpnNIqL4=\", false, function () {\n  return [useAtom];\n});\n\n_c = Doing;\nconst Container = styled(motion(Link))`\n  width: calc(100% + 2rem);\n  margin-left: -2rem;\n  background-color: transparent;\n  color: #ccc;\n  border-top: 1px solid #101010;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #101010;\n    color: #fff;\n  }\n\n  h5 {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n_c2 = Container;\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n`;\nconst LiveDot = styled.div`\n  display: inline-block;\n  margin-left: 4px;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #ff5252;\n  animation: ${fadeInOut} 2s ease-in-out infinite;\n`;\n_c3 = LiveDot;\nconst ActivityRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n_c4 = ActivityRow;\nconst ActivityImageContainer = styled.div`\n  position: relative;\n  height: 50px;\n`;\n_c5 = ActivityImageContainer;\nconst ActivityImage = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 10px;\n`;\n_c6 = ActivityImage;\nconst ActivitySecondaryImage = styled.img`\n  position: absolute;\n  bottom: -5px;\n  right: -5px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #000;\n  border: 2px solid #000;\n`;\n_c7 = ActivitySecondaryImage;\nconst ActivityInfo = styled.div`\n  margin-left: 1rem;\n\n  h5 {\n    color: #fff;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n`;\n_c8 = ActivityInfo;\nexport default _c9 = /*#__PURE__*/forwardRef(Doing);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Doing\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"LiveDot\");\n$RefreshReg$(_c4, \"ActivityRow\");\n$RefreshReg$(_c5, \"ActivityImageContainer\");\n$RefreshReg$(_c6, \"ActivityImage\");\n$RefreshReg$(_c7, \"ActivitySecondaryImage\");\n$RefreshReg$(_c8, \"ActivityInfo\");\n$RefreshReg$(_c9, \"%default%\");","map":{"version":3,"sources":["/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/Doing.tsx"],"names":["motion","forwardRef","useEffect","useMemo","useState","Link","styled","keyframes","useAtom","doingAtom","Operation","EventType","logLanyardEvent","eventName","data","console","log","discordId","Doing","setActive","props","ref","socket","setSocket","doing","setDoing","send","op","d","JSON","stringify","onmessage","t","parse","Hello","setInterval","Heartbeat","heartbeat_interval","Initialize","subscribe_to_id","Event","INIT_STATE","PRESENCE_UPDATE","includes","onclose","WebSocket","currentActivity","activities","filter","activity","type","listening_to_spotify","discord_status","spotify","album_art_url","SpotifyLogo","song","artist","assets","application_id","large_image","small_image","name","details","state","Container","fadeInOut","LiveDot","div","ActivityRow","ActivityImageContainer","ActivityImage","img","ActivitySecondaryImage","ActivityInfo"],"mappings":"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","sourcesContent":["import { motion } from 'framer-motion';\nimport { forwardRef, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { Presence } from '../types/lanyard';\nimport SpotifyLogo from '../assets/images/spotify-logo.svg';\nimport { useAtom } from 'jotai';\nimport { doingAtom } from '../state/lanyard';\n\n// Thanks to Tim (https://github.com/timcole/timcole.me/blob/%F0%9F%A6%84/components/lanyard.tsx) for the types\n\nenum Operation {\n  Event,\n  Hello,\n  Initialize,\n  Heartbeat,\n}\n\nenum EventType {\n  INIT_STATE = 'INIT_STATE',\n  PRESENCE_UPDATE = 'PRESENCE_UPDATE',\n}\n\ntype SocketEvent = {\n  op: Operation;\n  t?: EventType;\n  d: Presence | unknown;\n};\n\nconst logLanyardEvent = (eventName: string, data: any) => {\n  // eslint-disable-next-line no-console\n  console.log(\n    `%cLanyard%c <~ ${eventName} %o`,\n    'background-color: #d7bb87; border-radius: 5px; padding: 3px; color: #372910;',\n    'background: none; color: #d7bb87;',\n    data\n  );\n};\n\nconst discordId = '94490510688792576';\n\nconst Doing = (\n  { setActive, ...props }: { setActive: (active: boolean) => void } & any,\n  ref: any\n) => {\n  const [socket, setSocket] = useState<WebSocket | null>(null);\n  const [doing, setDoing] = useAtom(doingAtom);\n\n  const send = (op: Operation, d?: unknown): void => {\n    if (socket !== null) socket.send(JSON.stringify({ op, d }));\n  };\n\n  useEffect(() => {\n    if (socket === null) return () => {};\n\n    socket.onmessage = function ({ data }: MessageEvent): void {\n      const { op, t, d }: SocketEvent = JSON.parse(data);\n\n      if (op === Operation.Hello) {\n        setInterval(\n          () => send(Operation.Heartbeat),\n          (d as { heartbeat_interval: number }).heartbeat_interval\n        );\n        send(Operation.Initialize, { subscribe_to_id: discordId });\n      } else if (op === Operation.Event && t) {\n        logLanyardEvent(t, d);\n\n        if ([EventType.INIT_STATE, EventType.PRESENCE_UPDATE].includes(t)) setDoing(d as Presence);\n      }\n    };\n\n    socket.onclose = () => {\n      setSocket(null);\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (!socket) setSocket(new WebSocket('wss://api.lanyard.rest/socket'));\n  }, [socket]);\n\n  const currentActivity = useMemo(\n    () => doing?.activities.filter((activity) => activity.type === 0)[0],\n    [doing]\n  );\n\n  useEffect(() => {\n    setActive(doing?.listening_to_spotify || currentActivity);\n  }, [doing, currentActivity]);\n\n  if (!doing || !doing?.discord_status) return null;\n\n  return (\n    <>\n      {doing?.listening_to_spotify ? (\n        <Container ref={ref} to={'/presence'} {...props}>\n          <h5>\n            Listening to Spotify <LiveDot />\n          </h5>\n          <>\n            <ActivityRow>\n              <ActivityImageContainer>\n                <ActivityImage src={doing.spotify.album_art_url} />\n                <ActivitySecondaryImage src={SpotifyLogo} />\n              </ActivityImageContainer>\n\n              <ActivityInfo>\n                <h5>{doing.spotify.song}</h5>\n                <p>by {doing.spotify.artist}</p>\n              </ActivityInfo>\n            </ActivityRow>\n          </>\n        </Container>\n      ) : null}\n      {currentActivity ? (\n        <Container to={'/presence'} {...props}>\n          <h5>Doing something</h5>\n          <ActivityRow>\n            {currentActivity.assets ? (\n              <ActivityImageContainer>\n                <ActivityImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.large_image}.png`}\n                />\n                <ActivitySecondaryImage\n                  src={`https://cdn.discordapp.com/app-assets/${currentActivity.application_id}/${currentActivity.assets.small_image}.png`}\n                />\n              </ActivityImageContainer>\n            ) : null}\n            <ActivityInfo>\n              <h5>{currentActivity.name}</h5>\n              {currentActivity.details ? <p>{currentActivity.details}</p> : null}\n              {currentActivity.state ? <p>{currentActivity.state}</p> : null}\n            </ActivityInfo>\n          </ActivityRow>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nconst Container = styled(motion(Link))`\n  width: calc(100% + 2rem);\n  margin-left: -2rem;\n  background-color: transparent;\n  color: #ccc;\n  border-top: 1px solid #101010;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #101010;\n    color: #fff;\n  }\n\n  h5 {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst fadeInOut = keyframes`\n  0% {\n    opacity: 0;\n  }\n  \n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n`;\n\nconst LiveDot = styled.div`\n  display: inline-block;\n  margin-left: 4px;\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #ff5252;\n  animation: ${fadeInOut} 2s ease-in-out infinite;\n`;\n\nconst ActivityRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ActivityImageContainer = styled.div`\n  position: relative;\n  height: 50px;\n`;\n\nconst ActivityImage = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 10px;\n`;\n\nconst ActivitySecondaryImage = styled.img`\n  position: absolute;\n  bottom: -5px;\n  right: -5px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #000;\n  border: 2px solid #000;\n`;\n\nconst ActivityInfo = styled.div`\n  margin-left: 1rem;\n\n  h5 {\n    color: #fff;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n    font-size: 0.8rem;\n  }\n`;\n\nexport default forwardRef(Doing);\n"]},"metadata":{},"sourceType":"module"}