{"ast":null,"code":"var _jsxFileName = \"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Word = _ref => {\n  _s();\n  let {\n    word\n  } = _ref;\n  const [filled, setFilled] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setFilled(true);\n    }, 65);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WordSC, {\n    filled: filled,\n    children: word\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_s(Word, \"Tinc81DAPpK2VNP1wAdxBTGJz+U=\");\n_c = Word;\nconst SuccessiveType = _ref2 => {\n  _s2();\n  let {\n    words,\n    speed,\n    userSkipped,\n    onEnd\n  } = _ref2;\n  const [play] = useSound('/p-static/sounds/type.ogg');\n  const [index, setIndex] = useState(0);\n  const splitWords = useMemo(() => words.split(' '), [words]);\n  const shownWords = useMemo(() => splitWords.slice(0, index + 1), [splitWords, index]);\n  useEffect(() => {\n    if (index === splitWords.length - 1) {\n      if (onEnd) setTimeout(() => {\n        onEnd();\n      }, 1800);\n      return;\n    }\n    const currentWord = splitWords[index];\n    setTimeout(() => {\n      setIndex(index + 1);\n    }, currentWord.length * (Math.E * 12.5) + (currentWord[currentWord.length - 1] === '.' ? 500 : 0));\n  }, [index, splitWords]);\n  useEffect(() => {\n    if (!userSkipped) play();\n  }, [index, play, userSkipped]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: shownWords.map((word, idx) => /*#__PURE__*/_jsxDEV(Word, {\n      word: word\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s2(SuccessiveType, \"RsF1OFno1mST1wzKYD/uJ+mocZY=\", false, function () {\n  return [useSound];\n});\n_c2 = SuccessiveType;\nconst Container = styled.div`\n  text-align: left;\n  color: #232529;\n  font-size: 20pt;\n`;\n_c3 = Container;\nconst WordSC = styled.span`\n  color: ${_ref3 => {\n  let {\n    filled\n  } = _ref3;\n  return filled ? '#ccc' : '#fff';\n}};\n  margin-right: 4pt;\n  transition: color 0.1s ease;\n  display: inline-block;\n`;\n_c4 = WordSC;\nexport default SuccessiveType;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"SuccessiveType\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"WordSC\");","map":{"version":3,"names":["useEffect","useMemo","useState","styled","useSound","Word","word","filled","setFilled","setTimeout","SuccessiveType","words","speed","userSkipped","onEnd","play","index","setIndex","splitWords","split","shownWords","slice","length","currentWord","Math","E","map","idx","Container","div","WordSC","span"],"sources":["/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SuccessiveType.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport useSound from 'use-sound';\n\nconst Word = ({ word }: { word: string }) => {\n  const [filled, setFilled] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFilled(true);\n    }, 65);\n  }, []);\n\n  return <WordSC filled={filled}>{word}</WordSC>;\n};\n\ninterface ISuccessiveTypeProps {\n  words: string;\n  speed: number;\n  userSkipped?: boolean;\n  onEnd?: () => void;\n}\n\nconst SuccessiveType = ({ words, speed, userSkipped, onEnd }: ISuccessiveTypeProps) => {\n  const [play] = useSound('/p-static/sounds/type.ogg');\n\n  const [index, setIndex] = useState(0);\n\n  const splitWords: string[] = useMemo(() => words.split(' '), [words]);\n  const shownWords: string[] = useMemo(() => splitWords.slice(0, index + 1), [splitWords, index]);\n\n  useEffect(() => {\n    if (index === splitWords.length - 1) {\n      if (onEnd)\n        setTimeout(() => {\n          onEnd();\n        }, 1800);\n\n      return;\n    }\n\n    const currentWord = splitWords[index];\n\n    setTimeout(() => {\n      setIndex(index + 1);\n    }, currentWord.length * (Math.E * 12.5) + (currentWord[currentWord.length - 1] === '.' ? 500 : 0));\n  }, [index, splitWords]);\n\n  useEffect(() => {\n    if (!userSkipped) play();\n  }, [index, play, userSkipped]);\n\n  return (\n    <Container>\n      {shownWords.map((word: string, idx) => (\n        <Word key={idx} word={word} />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  text-align: left;\n  color: #232529;\n  font-size: 20pt;\n`;\n\nconst WordSC = styled.span<{ filled: boolean }>`\n  color: ${({ filled }) => (filled ? '#ccc' : '#fff')};\n  margin-right: 4pt;\n  transition: color 0.1s ease;\n  display: inline-block;\n`;\n\nexport default SuccessiveType;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}