{"ast":null,"code":"var _jsxFileName = \"/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SegmentedControl.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport './styles.css';\n// @ts-nocheck\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-a-segmented-control-component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SegmentedControl = _ref => {\n  _s();\n  let {\n    name,\n    segments,\n    callback,\n    defaultIndex = 0,\n    controlRef\n  } = _ref;\n  const [activeIndex, setActiveIndex] = useState(defaultIndex);\n  const componentReady = useRef();\n\n  // Determine when the component is \"ready\"\n  useEffect(() => {\n    componentReady.current = true;\n  }, []);\n  useEffect(() => {\n    const activeSegmentRef = segments[activeIndex].ref;\n    const {\n      offsetWidth,\n      offsetLeft\n    } = activeSegmentRef.current;\n    const {\n      style\n    } = controlRef.current;\n    style.setProperty('--highlight-width', `${offsetWidth}px`);\n    style.setProperty('--highlight-x-pos', `${offsetLeft}px`);\n  }, [activeIndex, callback, controlRef, segments]);\n  const onInputChange = (value, index) => {\n    setActiveIndex(index);\n    callback(value, index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controls-container\",\n    ref: controlRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `controls ${componentReady.current ? 'ready' : 'idle'}`,\n      children: segments === null || segments === void 0 ? void 0 : segments.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `segment ${i === activeIndex ? 'active' : 'inactive'}`,\n        ref: item.ref,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: item.value,\n          id: item.label,\n          name: name,\n          onChange: () => onInputChange(item.value, i),\n          checked: i === activeIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: item.label,\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, item.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SegmentedControl, \"hLr8PJjZQGlvz1xNn+4qCuaKSaI=\");\n_c = SegmentedControl;\nexport default SegmentedControl;\nvar _c;\n$RefreshReg$(_c, \"SegmentedControl\");","map":{"version":3,"names":["useRef","useState","useEffect","SegmentedControl","name","segments","callback","defaultIndex","controlRef","activeIndex","setActiveIndex","componentReady","current","activeSegmentRef","ref","offsetWidth","offsetLeft","style","setProperty","onInputChange","value","index","map","item","i","label"],"sources":["/Users/platonmazarakis/coding-projects/pm-personal-website/src/components/SegmentedControl.tsx"],"sourcesContent":["import { useRef, useState, useEffect, Key, LegacyRef } from 'react';\nimport './styles.css';\n// @ts-nocheck\n/*\n * Read the blog post here:\n * https://letsbuildui.dev/articles/building-a-segmented-control-component\n */\nconst SegmentedControl = ({\n  name,\n  segments,\n  callback,\n  defaultIndex = 0,\n  controlRef,\n}: {\n  name: any;\n  segments: any;\n  callback: any;\n  defaultIndex: any;\n  controlRef: any;\n}) => {\n  const [activeIndex, setActiveIndex] = useState(defaultIndex);\n  const componentReady = useRef();\n\n  // Determine when the component is \"ready\"\n  useEffect(() => {\n    componentReady.current = true;\n  }, []);\n\n  useEffect(() => {\n    const activeSegmentRef = segments[activeIndex].ref;\n    const { offsetWidth, offsetLeft } = activeSegmentRef.current;\n    const { style } = controlRef.current;\n\n    style.setProperty('--highlight-width', `${offsetWidth}px`);\n    style.setProperty('--highlight-x-pos', `${offsetLeft}px`);\n  }, [activeIndex, callback, controlRef, segments]);\n\n  const onInputChange = (value: any, index: any) => {\n    setActiveIndex(index);\n    callback(value, index);\n  };\n\n  return (\n    <div className=\"controls-container\" ref={controlRef}>\n      <div className={`controls ${componentReady.current ? 'ready' : 'idle'}`}>\n        {segments?.map(\n          (\n            item: {\n              value: Key | readonly string[] | null | undefined;\n              ref: LegacyRef<HTMLDivElement> | undefined;\n              label: {} | null | undefined;\n            },\n            i: any\n          ) => (\n            <div\n              key={item.value}\n              className={`segment ${i === activeIndex ? 'active' : 'inactive'}`}\n              ref={item.ref}\n            >\n              <input\n                type=\"radio\"\n                value={item.value}\n                id={item.label}\n                name={name}\n                onChange={() => onInputChange(item.value, i)}\n                checked={i === activeIndex}\n              />\n              <label htmlFor={item.label as const}>{item.label}</label>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SegmentedControl;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAwB,OAAO;AACnE,OAAO,cAAc;AACrB;AACA;AACA;AACA;AACA;AAHA;AAIA,MAAMC,gBAAgB,GAAG,QAYnB;EAAA;EAAA,IAZoB;IACxBC,IAAI;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY,GAAG,CAAC;IAChBC;EAOF,CAAC;EACC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACM,YAAY,CAAC;EAC5D,MAAMI,cAAc,GAAGX,MAAM,EAAE;;EAE/B;EACAE,SAAS,CAAC,MAAM;IACdS,cAAc,CAACC,OAAO,GAAG,IAAI;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAGR,QAAQ,CAACI,WAAW,CAAC,CAACK,GAAG;IAClD,MAAM;MAAEC,WAAW;MAAEC;IAAW,CAAC,GAAGH,gBAAgB,CAACD,OAAO;IAC5D,MAAM;MAAEK;IAAM,CAAC,GAAGT,UAAU,CAACI,OAAO;IAEpCK,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAG,GAAEH,WAAY,IAAG,CAAC;IAC1DE,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAG,GAAEF,UAAW,IAAG,CAAC;EAC3D,CAAC,EAAE,CAACP,WAAW,EAAEH,QAAQ,EAAEE,UAAU,EAAEH,QAAQ,CAAC,CAAC;EAEjD,MAAMc,aAAa,GAAG,CAACC,KAAU,EAAEC,KAAU,KAAK;IAChDX,cAAc,CAACW,KAAK,CAAC;IACrBf,QAAQ,CAACc,KAAK,EAAEC,KAAK,CAAC;EACxB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,oBAAoB;IAAC,GAAG,EAAEb,UAAW;IAAA,uBAClD;MAAK,SAAS,EAAG,YAAWG,cAAc,CAACC,OAAO,GAAG,OAAO,GAAG,MAAO,EAAE;MAAA,UACrEP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEiB,GAAG,CACZ,CACEC,IAIC,EACDC,CAAM,kBAEN;QAEE,SAAS,EAAG,WAAUA,CAAC,KAAKf,WAAW,GAAG,QAAQ,GAAG,UAAW,EAAE;QAClE,GAAG,EAAEc,IAAI,CAACT,GAAI;QAAA,wBAEd;UACE,IAAI,EAAC,OAAO;UACZ,KAAK,EAAES,IAAI,CAACH,KAAM;UAClB,EAAE,EAAEG,IAAI,CAACE,KAAM;UACf,IAAI,EAAErB,IAAK;UACX,QAAQ,EAAE,MAAMe,aAAa,CAACI,IAAI,CAACH,KAAK,EAAEI,CAAC,CAAE;UAC7C,OAAO,EAAEA,CAAC,KAAKf;QAAY;UAAA;UAAA;UAAA;QAAA,QAC3B,eACF;UAAO,OAAO,EAAEc,IAAI,CAACE,KAAe;UAAA,UAAEF,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAZpDF,IAAI,CAACH,KAAK;QAAA;QAAA;QAAA;MAAA,QAclB;IACF;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAnEIjB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAqEtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}